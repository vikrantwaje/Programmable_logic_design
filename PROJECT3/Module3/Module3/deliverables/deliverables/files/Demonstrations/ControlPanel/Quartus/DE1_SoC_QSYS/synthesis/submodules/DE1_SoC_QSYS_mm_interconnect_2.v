// DE1_SoC_QSYS_mm_interconnect_2.v

// This file was auto-generated from altera_merlin_interconnect_wrapper_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 13.1 178 at 2014.05.16.15:24:56

`timescale 1 ps / 1 ps
module DE1_SoC_QSYS_mm_interconnect_2 (
		input  wire        pll_sys_outclk2_clk,                                         //                                       pll_sys_outclk2.clk
		input  wire        clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset, // clock_crossing_io_slow_m0_reset_reset_bridge_in_reset.reset
		input  wire [8:0]  clock_crossing_io_slow_m0_address,                           //                             clock_crossing_io_slow_m0.address
		output wire        clock_crossing_io_slow_m0_waitrequest,                       //                                                      .waitrequest
		input  wire [0:0]  clock_crossing_io_slow_m0_burstcount,                        //                                                      .burstcount
		input  wire [3:0]  clock_crossing_io_slow_m0_byteenable,                        //                                                      .byteenable
		input  wire        clock_crossing_io_slow_m0_read,                              //                                                      .read
		output wire [31:0] clock_crossing_io_slow_m0_readdata,                          //                                                      .readdata
		output wire        clock_crossing_io_slow_m0_readdatavalid,                     //                                                      .readdatavalid
		input  wire        clock_crossing_io_slow_m0_write,                             //                                                      .write
		input  wire [31:0] clock_crossing_io_slow_m0_writedata,                         //                                                      .writedata
		input  wire        clock_crossing_io_slow_m0_debugaccess,                       //                                                      .debugaccess
		output wire [1:0]  i2c_scl_s1_address,                                          //                                            i2c_scl_s1.address
		output wire        i2c_scl_s1_write,                                            //                                                      .write
		input  wire [31:0] i2c_scl_s1_readdata,                                         //                                                      .readdata
		output wire [31:0] i2c_scl_s1_writedata,                                        //                                                      .writedata
		output wire        i2c_scl_s1_chipselect,                                       //                                                      .chipselect
		output wire [1:0]  i2c_sda_s1_address,                                          //                                            i2c_sda_s1.address
		output wire        i2c_sda_s1_write,                                            //                                                      .write
		input  wire [31:0] i2c_sda_s1_readdata,                                         //                                                      .readdata
		output wire [31:0] i2c_sda_s1_writedata,                                        //                                                      .writedata
		output wire        i2c_sda_s1_chipselect,                                       //                                                      .chipselect
		output wire [0:0]  sysid_control_slave_address,                                 //                                   sysid_control_slave.address
		input  wire [31:0] sysid_control_slave_readdata,                                //                                                      .readdata
		output wire [1:0]  td_reset_n_s1_address,                                       //                                         td_reset_n_s1.address
		output wire        td_reset_n_s1_write,                                         //                                                      .write
		input  wire [31:0] td_reset_n_s1_readdata,                                      //                                                      .readdata
		output wire [31:0] td_reset_n_s1_writedata,                                     //                                                      .writedata
		output wire        td_reset_n_s1_chipselect,                                    //                                                      .chipselect
		output wire [1:0]  td_status_s1_address,                                        //                                          td_status_s1.address
		input  wire [31:0] td_status_s1_readdata,                                       //                                                      .readdata
		output wire [2:0]  timer_s1_address,                                            //                                              timer_s1.address
		output wire        timer_s1_write,                                              //                                                      .write
		input  wire [15:0] timer_s1_readdata,                                           //                                                      .readdata
		output wire [15:0] timer_s1_writedata,                                          //                                                      .writedata
		output wire        timer_s1_chipselect                                          //                                                      .chipselect
	);

	wire         clock_crossing_io_slow_m0_translator_avalon_universal_master_0_waitrequest;               // clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent:av_waitrequest -> clock_crossing_io_slow_m0_translator:uav_waitrequest
	wire   [2:0] clock_crossing_io_slow_m0_translator_avalon_universal_master_0_burstcount;                // clock_crossing_io_slow_m0_translator:uav_burstcount -> clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent:av_burstcount
	wire  [31:0] clock_crossing_io_slow_m0_translator_avalon_universal_master_0_writedata;                 // clock_crossing_io_slow_m0_translator:uav_writedata -> clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent:av_writedata
	wire   [8:0] clock_crossing_io_slow_m0_translator_avalon_universal_master_0_address;                   // clock_crossing_io_slow_m0_translator:uav_address -> clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent:av_address
	wire         clock_crossing_io_slow_m0_translator_avalon_universal_master_0_lock;                      // clock_crossing_io_slow_m0_translator:uav_lock -> clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent:av_lock
	wire         clock_crossing_io_slow_m0_translator_avalon_universal_master_0_write;                     // clock_crossing_io_slow_m0_translator:uav_write -> clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent:av_write
	wire         clock_crossing_io_slow_m0_translator_avalon_universal_master_0_read;                      // clock_crossing_io_slow_m0_translator:uav_read -> clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent:av_read
	wire  [31:0] clock_crossing_io_slow_m0_translator_avalon_universal_master_0_readdata;                  // clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent:av_readdata -> clock_crossing_io_slow_m0_translator:uav_readdata
	wire         clock_crossing_io_slow_m0_translator_avalon_universal_master_0_debugaccess;               // clock_crossing_io_slow_m0_translator:uav_debugaccess -> clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent:av_debugaccess
	wire   [3:0] clock_crossing_io_slow_m0_translator_avalon_universal_master_0_byteenable;                // clock_crossing_io_slow_m0_translator:uav_byteenable -> clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent:av_byteenable
	wire         clock_crossing_io_slow_m0_translator_avalon_universal_master_0_readdatavalid;             // clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent:av_readdatavalid -> clock_crossing_io_slow_m0_translator:uav_readdatavalid
	wire         timer_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                        // timer_s1_translator:uav_waitrequest -> timer_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] timer_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                         // timer_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> timer_s1_translator:uav_burstcount
	wire  [31:0] timer_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                          // timer_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> timer_s1_translator:uav_writedata
	wire   [8:0] timer_s1_translator_avalon_universal_slave_0_agent_m0_address;                            // timer_s1_translator_avalon_universal_slave_0_agent:m0_address -> timer_s1_translator:uav_address
	wire         timer_s1_translator_avalon_universal_slave_0_agent_m0_write;                              // timer_s1_translator_avalon_universal_slave_0_agent:m0_write -> timer_s1_translator:uav_write
	wire         timer_s1_translator_avalon_universal_slave_0_agent_m0_lock;                               // timer_s1_translator_avalon_universal_slave_0_agent:m0_lock -> timer_s1_translator:uav_lock
	wire         timer_s1_translator_avalon_universal_slave_0_agent_m0_read;                               // timer_s1_translator_avalon_universal_slave_0_agent:m0_read -> timer_s1_translator:uav_read
	wire  [31:0] timer_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                           // timer_s1_translator:uav_readdata -> timer_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         timer_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                      // timer_s1_translator:uav_readdatavalid -> timer_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         timer_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                        // timer_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> timer_s1_translator:uav_debugaccess
	wire   [3:0] timer_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                         // timer_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> timer_s1_translator:uav_byteenable
	wire         timer_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                 // timer_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         timer_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                       // timer_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         timer_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;               // timer_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [83:0] timer_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                        // timer_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         timer_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                       // timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> timer_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;              // timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> timer_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                    // timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> timer_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;            // timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> timer_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [83:0] timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                     // timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> timer_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                    // timer_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                  // timer_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> timer_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                   // timer_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> timer_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                  // timer_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> timer_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest;             // sysid_control_slave_translator:uav_waitrequest -> sysid_control_slave_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_burstcount;              // sysid_control_slave_translator_avalon_universal_slave_0_agent:m0_burstcount -> sysid_control_slave_translator:uav_burstcount
	wire  [31:0] sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_writedata;               // sysid_control_slave_translator_avalon_universal_slave_0_agent:m0_writedata -> sysid_control_slave_translator:uav_writedata
	wire   [8:0] sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_address;                 // sysid_control_slave_translator_avalon_universal_slave_0_agent:m0_address -> sysid_control_slave_translator:uav_address
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_write;                   // sysid_control_slave_translator_avalon_universal_slave_0_agent:m0_write -> sysid_control_slave_translator:uav_write
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_lock;                    // sysid_control_slave_translator_avalon_universal_slave_0_agent:m0_lock -> sysid_control_slave_translator:uav_lock
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_read;                    // sysid_control_slave_translator_avalon_universal_slave_0_agent:m0_read -> sysid_control_slave_translator:uav_read
	wire  [31:0] sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_readdata;                // sysid_control_slave_translator:uav_readdata -> sysid_control_slave_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid;           // sysid_control_slave_translator:uav_readdatavalid -> sysid_control_slave_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess;             // sysid_control_slave_translator_avalon_universal_slave_0_agent:m0_debugaccess -> sysid_control_slave_translator:uav_debugaccess
	wire   [3:0] sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_byteenable;              // sysid_control_slave_translator_avalon_universal_slave_0_agent:m0_byteenable -> sysid_control_slave_translator:uav_byteenable
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;      // sysid_control_slave_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_valid;            // sysid_control_slave_translator_avalon_universal_slave_0_agent:rf_source_valid -> sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;    // sysid_control_slave_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [83:0] sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_data;             // sysid_control_slave_translator_avalon_universal_slave_0_agent:rf_source_data -> sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_ready;            // sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> sysid_control_slave_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;   // sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> sysid_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;         // sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> sysid_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket; // sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> sysid_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [83:0] sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;          // sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> sysid_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;         // sysid_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_ready -> sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;       // sysid_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> sysid_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] sysid_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;        // sysid_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> sysid_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;       // sysid_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> sysid_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                      // i2c_scl_s1_translator:uav_waitrequest -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                       // i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> i2c_scl_s1_translator:uav_burstcount
	wire  [31:0] i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                        // i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> i2c_scl_s1_translator:uav_writedata
	wire   [8:0] i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_address;                          // i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_address -> i2c_scl_s1_translator:uav_address
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_write;                            // i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_write -> i2c_scl_s1_translator:uav_write
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_lock;                             // i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_lock -> i2c_scl_s1_translator:uav_lock
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_read;                             // i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_read -> i2c_scl_s1_translator:uav_read
	wire  [31:0] i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                         // i2c_scl_s1_translator:uav_readdata -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                    // i2c_scl_s1_translator:uav_readdatavalid -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                      // i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> i2c_scl_s1_translator:uav_debugaccess
	wire   [3:0] i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                       // i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> i2c_scl_s1_translator:uav_byteenable
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;               // i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                     // i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;             // i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [83:0] i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                      // i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                     // i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;            // i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                  // i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;          // i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [83:0] i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                   // i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                  // i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                // i2c_scl_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                 // i2c_scl_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                // i2c_scl_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                      // i2c_sda_s1_translator:uav_waitrequest -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                       // i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> i2c_sda_s1_translator:uav_burstcount
	wire  [31:0] i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                        // i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> i2c_sda_s1_translator:uav_writedata
	wire   [8:0] i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_address;                          // i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_address -> i2c_sda_s1_translator:uav_address
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_write;                            // i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_write -> i2c_sda_s1_translator:uav_write
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_lock;                             // i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_lock -> i2c_sda_s1_translator:uav_lock
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_read;                             // i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_read -> i2c_sda_s1_translator:uav_read
	wire  [31:0] i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                         // i2c_sda_s1_translator:uav_readdata -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                    // i2c_sda_s1_translator:uav_readdatavalid -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                      // i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> i2c_sda_s1_translator:uav_debugaccess
	wire   [3:0] i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                       // i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> i2c_sda_s1_translator:uav_byteenable
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;               // i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                     // i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;             // i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [83:0] i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                      // i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                     // i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;            // i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                  // i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;          // i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [83:0] i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                   // i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                  // i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                // i2c_sda_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                 // i2c_sda_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                // i2c_sda_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         td_status_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                    // td_status_s1_translator:uav_waitrequest -> td_status_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] td_status_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                     // td_status_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> td_status_s1_translator:uav_burstcount
	wire  [31:0] td_status_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                      // td_status_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> td_status_s1_translator:uav_writedata
	wire   [8:0] td_status_s1_translator_avalon_universal_slave_0_agent_m0_address;                        // td_status_s1_translator_avalon_universal_slave_0_agent:m0_address -> td_status_s1_translator:uav_address
	wire         td_status_s1_translator_avalon_universal_slave_0_agent_m0_write;                          // td_status_s1_translator_avalon_universal_slave_0_agent:m0_write -> td_status_s1_translator:uav_write
	wire         td_status_s1_translator_avalon_universal_slave_0_agent_m0_lock;                           // td_status_s1_translator_avalon_universal_slave_0_agent:m0_lock -> td_status_s1_translator:uav_lock
	wire         td_status_s1_translator_avalon_universal_slave_0_agent_m0_read;                           // td_status_s1_translator_avalon_universal_slave_0_agent:m0_read -> td_status_s1_translator:uav_read
	wire  [31:0] td_status_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                       // td_status_s1_translator:uav_readdata -> td_status_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         td_status_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                  // td_status_s1_translator:uav_readdatavalid -> td_status_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         td_status_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                    // td_status_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> td_status_s1_translator:uav_debugaccess
	wire   [3:0] td_status_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                     // td_status_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> td_status_s1_translator:uav_byteenable
	wire         td_status_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;             // td_status_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         td_status_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                   // td_status_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         td_status_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;           // td_status_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [83:0] td_status_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                    // td_status_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         td_status_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                   // td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> td_status_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;          // td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> td_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                // td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> td_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;        // td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> td_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [83:0] td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                 // td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> td_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                // td_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         td_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;              // td_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> td_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] td_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;               // td_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> td_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         td_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;              // td_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> td_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                   // td_reset_n_s1_translator:uav_waitrequest -> td_reset_n_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                    // td_reset_n_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> td_reset_n_s1_translator:uav_burstcount
	wire  [31:0] td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                     // td_reset_n_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> td_reset_n_s1_translator:uav_writedata
	wire   [8:0] td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_address;                       // td_reset_n_s1_translator_avalon_universal_slave_0_agent:m0_address -> td_reset_n_s1_translator:uav_address
	wire         td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_write;                         // td_reset_n_s1_translator_avalon_universal_slave_0_agent:m0_write -> td_reset_n_s1_translator:uav_write
	wire         td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_lock;                          // td_reset_n_s1_translator_avalon_universal_slave_0_agent:m0_lock -> td_reset_n_s1_translator:uav_lock
	wire         td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_read;                          // td_reset_n_s1_translator_avalon_universal_slave_0_agent:m0_read -> td_reset_n_s1_translator:uav_read
	wire  [31:0] td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                      // td_reset_n_s1_translator:uav_readdata -> td_reset_n_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                 // td_reset_n_s1_translator:uav_readdatavalid -> td_reset_n_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                   // td_reset_n_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> td_reset_n_s1_translator:uav_debugaccess
	wire   [3:0] td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                    // td_reset_n_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> td_reset_n_s1_translator:uav_byteenable
	wire         td_reset_n_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;            // td_reset_n_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         td_reset_n_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                  // td_reset_n_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         td_reset_n_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;          // td_reset_n_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [83:0] td_reset_n_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                   // td_reset_n_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         td_reset_n_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                  // td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> td_reset_n_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;         // td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> td_reset_n_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;               // td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> td_reset_n_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;       // td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> td_reset_n_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [83:0] td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                // td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> td_reset_n_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;               // td_reset_n_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         td_reset_n_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;             // td_reset_n_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> td_reset_n_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] td_reset_n_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;              // td_reset_n_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> td_reset_n_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         td_reset_n_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;             // td_reset_n_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> td_reset_n_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent_cp_endofpacket;      // clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent:cp_endofpacket -> addr_router:sink_endofpacket
	wire         clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent_cp_valid;            // clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent:cp_valid -> addr_router:sink_valid
	wire         clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent_cp_startofpacket;    // clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent:cp_startofpacket -> addr_router:sink_startofpacket
	wire  [82:0] clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent_cp_data;             // clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent:cp_data -> addr_router:sink_data
	wire         clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent_cp_ready;            // addr_router:sink_ready -> clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent:cp_ready
	wire         id_router_src_endofpacket;                                                                // id_router:src_endofpacket -> rsp_xbar_demux:sink_endofpacket
	wire         id_router_src_valid;                                                                      // id_router:src_valid -> rsp_xbar_demux:sink_valid
	wire         id_router_src_startofpacket;                                                              // id_router:src_startofpacket -> rsp_xbar_demux:sink_startofpacket
	wire  [82:0] id_router_src_data;                                                                       // id_router:src_data -> rsp_xbar_demux:sink_data
	wire   [5:0] id_router_src_channel;                                                                    // id_router:src_channel -> rsp_xbar_demux:sink_channel
	wire         id_router_src_ready;                                                                      // rsp_xbar_demux:sink_ready -> id_router:src_ready
	wire         id_router_001_src_endofpacket;                                                            // id_router_001:src_endofpacket -> rsp_xbar_demux_001:sink_endofpacket
	wire         id_router_001_src_valid;                                                                  // id_router_001:src_valid -> rsp_xbar_demux_001:sink_valid
	wire         id_router_001_src_startofpacket;                                                          // id_router_001:src_startofpacket -> rsp_xbar_demux_001:sink_startofpacket
	wire  [82:0] id_router_001_src_data;                                                                   // id_router_001:src_data -> rsp_xbar_demux_001:sink_data
	wire   [5:0] id_router_001_src_channel;                                                                // id_router_001:src_channel -> rsp_xbar_demux_001:sink_channel
	wire         id_router_001_src_ready;                                                                  // rsp_xbar_demux_001:sink_ready -> id_router_001:src_ready
	wire         id_router_002_src_endofpacket;                                                            // id_router_002:src_endofpacket -> rsp_xbar_demux_002:sink_endofpacket
	wire         id_router_002_src_valid;                                                                  // id_router_002:src_valid -> rsp_xbar_demux_002:sink_valid
	wire         id_router_002_src_startofpacket;                                                          // id_router_002:src_startofpacket -> rsp_xbar_demux_002:sink_startofpacket
	wire  [82:0] id_router_002_src_data;                                                                   // id_router_002:src_data -> rsp_xbar_demux_002:sink_data
	wire   [5:0] id_router_002_src_channel;                                                                // id_router_002:src_channel -> rsp_xbar_demux_002:sink_channel
	wire         id_router_002_src_ready;                                                                  // rsp_xbar_demux_002:sink_ready -> id_router_002:src_ready
	wire         id_router_003_src_endofpacket;                                                            // id_router_003:src_endofpacket -> rsp_xbar_demux_003:sink_endofpacket
	wire         id_router_003_src_valid;                                                                  // id_router_003:src_valid -> rsp_xbar_demux_003:sink_valid
	wire         id_router_003_src_startofpacket;                                                          // id_router_003:src_startofpacket -> rsp_xbar_demux_003:sink_startofpacket
	wire  [82:0] id_router_003_src_data;                                                                   // id_router_003:src_data -> rsp_xbar_demux_003:sink_data
	wire   [5:0] id_router_003_src_channel;                                                                // id_router_003:src_channel -> rsp_xbar_demux_003:sink_channel
	wire         id_router_003_src_ready;                                                                  // rsp_xbar_demux_003:sink_ready -> id_router_003:src_ready
	wire         id_router_004_src_endofpacket;                                                            // id_router_004:src_endofpacket -> rsp_xbar_demux_004:sink_endofpacket
	wire         id_router_004_src_valid;                                                                  // id_router_004:src_valid -> rsp_xbar_demux_004:sink_valid
	wire         id_router_004_src_startofpacket;                                                          // id_router_004:src_startofpacket -> rsp_xbar_demux_004:sink_startofpacket
	wire  [82:0] id_router_004_src_data;                                                                   // id_router_004:src_data -> rsp_xbar_demux_004:sink_data
	wire   [5:0] id_router_004_src_channel;                                                                // id_router_004:src_channel -> rsp_xbar_demux_004:sink_channel
	wire         id_router_004_src_ready;                                                                  // rsp_xbar_demux_004:sink_ready -> id_router_004:src_ready
	wire         id_router_005_src_endofpacket;                                                            // id_router_005:src_endofpacket -> rsp_xbar_demux_005:sink_endofpacket
	wire         id_router_005_src_valid;                                                                  // id_router_005:src_valid -> rsp_xbar_demux_005:sink_valid
	wire         id_router_005_src_startofpacket;                                                          // id_router_005:src_startofpacket -> rsp_xbar_demux_005:sink_startofpacket
	wire  [82:0] id_router_005_src_data;                                                                   // id_router_005:src_data -> rsp_xbar_demux_005:sink_data
	wire   [5:0] id_router_005_src_channel;                                                                // id_router_005:src_channel -> rsp_xbar_demux_005:sink_channel
	wire         id_router_005_src_ready;                                                                  // rsp_xbar_demux_005:sink_ready -> id_router_005:src_ready
	wire         addr_router_src_endofpacket;                                                              // addr_router:src_endofpacket -> limiter:cmd_sink_endofpacket
	wire         addr_router_src_valid;                                                                    // addr_router:src_valid -> limiter:cmd_sink_valid
	wire         addr_router_src_startofpacket;                                                            // addr_router:src_startofpacket -> limiter:cmd_sink_startofpacket
	wire  [82:0] addr_router_src_data;                                                                     // addr_router:src_data -> limiter:cmd_sink_data
	wire   [5:0] addr_router_src_channel;                                                                  // addr_router:src_channel -> limiter:cmd_sink_channel
	wire         addr_router_src_ready;                                                                    // limiter:cmd_sink_ready -> addr_router:src_ready
	wire         limiter_rsp_src_endofpacket;                                                              // limiter:rsp_src_endofpacket -> clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent:rp_endofpacket
	wire         limiter_rsp_src_valid;                                                                    // limiter:rsp_src_valid -> clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent:rp_valid
	wire         limiter_rsp_src_startofpacket;                                                            // limiter:rsp_src_startofpacket -> clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent:rp_startofpacket
	wire  [82:0] limiter_rsp_src_data;                                                                     // limiter:rsp_src_data -> clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent:rp_data
	wire   [5:0] limiter_rsp_src_channel;                                                                  // limiter:rsp_src_channel -> clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent:rp_channel
	wire         limiter_rsp_src_ready;                                                                    // clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent:rp_ready -> limiter:rsp_src_ready
	wire         cmd_xbar_demux_src0_endofpacket;                                                          // cmd_xbar_demux:src0_endofpacket -> cmd_xbar_mux:sink0_endofpacket
	wire         cmd_xbar_demux_src0_valid;                                                                // cmd_xbar_demux:src0_valid -> cmd_xbar_mux:sink0_valid
	wire         cmd_xbar_demux_src0_startofpacket;                                                        // cmd_xbar_demux:src0_startofpacket -> cmd_xbar_mux:sink0_startofpacket
	wire  [82:0] cmd_xbar_demux_src0_data;                                                                 // cmd_xbar_demux:src0_data -> cmd_xbar_mux:sink0_data
	wire   [5:0] cmd_xbar_demux_src0_channel;                                                              // cmd_xbar_demux:src0_channel -> cmd_xbar_mux:sink0_channel
	wire         cmd_xbar_demux_src0_ready;                                                                // cmd_xbar_mux:sink0_ready -> cmd_xbar_demux:src0_ready
	wire         cmd_xbar_demux_src1_endofpacket;                                                          // cmd_xbar_demux:src1_endofpacket -> cmd_xbar_mux_001:sink0_endofpacket
	wire         cmd_xbar_demux_src1_valid;                                                                // cmd_xbar_demux:src1_valid -> cmd_xbar_mux_001:sink0_valid
	wire         cmd_xbar_demux_src1_startofpacket;                                                        // cmd_xbar_demux:src1_startofpacket -> cmd_xbar_mux_001:sink0_startofpacket
	wire  [82:0] cmd_xbar_demux_src1_data;                                                                 // cmd_xbar_demux:src1_data -> cmd_xbar_mux_001:sink0_data
	wire   [5:0] cmd_xbar_demux_src1_channel;                                                              // cmd_xbar_demux:src1_channel -> cmd_xbar_mux_001:sink0_channel
	wire         cmd_xbar_demux_src1_ready;                                                                // cmd_xbar_mux_001:sink0_ready -> cmd_xbar_demux:src1_ready
	wire         cmd_xbar_demux_src2_endofpacket;                                                          // cmd_xbar_demux:src2_endofpacket -> cmd_xbar_mux_002:sink0_endofpacket
	wire         cmd_xbar_demux_src2_valid;                                                                // cmd_xbar_demux:src2_valid -> cmd_xbar_mux_002:sink0_valid
	wire         cmd_xbar_demux_src2_startofpacket;                                                        // cmd_xbar_demux:src2_startofpacket -> cmd_xbar_mux_002:sink0_startofpacket
	wire  [82:0] cmd_xbar_demux_src2_data;                                                                 // cmd_xbar_demux:src2_data -> cmd_xbar_mux_002:sink0_data
	wire   [5:0] cmd_xbar_demux_src2_channel;                                                              // cmd_xbar_demux:src2_channel -> cmd_xbar_mux_002:sink0_channel
	wire         cmd_xbar_demux_src2_ready;                                                                // cmd_xbar_mux_002:sink0_ready -> cmd_xbar_demux:src2_ready
	wire         cmd_xbar_demux_src3_endofpacket;                                                          // cmd_xbar_demux:src3_endofpacket -> cmd_xbar_mux_003:sink0_endofpacket
	wire         cmd_xbar_demux_src3_valid;                                                                // cmd_xbar_demux:src3_valid -> cmd_xbar_mux_003:sink0_valid
	wire         cmd_xbar_demux_src3_startofpacket;                                                        // cmd_xbar_demux:src3_startofpacket -> cmd_xbar_mux_003:sink0_startofpacket
	wire  [82:0] cmd_xbar_demux_src3_data;                                                                 // cmd_xbar_demux:src3_data -> cmd_xbar_mux_003:sink0_data
	wire   [5:0] cmd_xbar_demux_src3_channel;                                                              // cmd_xbar_demux:src3_channel -> cmd_xbar_mux_003:sink0_channel
	wire         cmd_xbar_demux_src3_ready;                                                                // cmd_xbar_mux_003:sink0_ready -> cmd_xbar_demux:src3_ready
	wire         cmd_xbar_demux_src4_endofpacket;                                                          // cmd_xbar_demux:src4_endofpacket -> cmd_xbar_mux_004:sink0_endofpacket
	wire         cmd_xbar_demux_src4_valid;                                                                // cmd_xbar_demux:src4_valid -> cmd_xbar_mux_004:sink0_valid
	wire         cmd_xbar_demux_src4_startofpacket;                                                        // cmd_xbar_demux:src4_startofpacket -> cmd_xbar_mux_004:sink0_startofpacket
	wire  [82:0] cmd_xbar_demux_src4_data;                                                                 // cmd_xbar_demux:src4_data -> cmd_xbar_mux_004:sink0_data
	wire   [5:0] cmd_xbar_demux_src4_channel;                                                              // cmd_xbar_demux:src4_channel -> cmd_xbar_mux_004:sink0_channel
	wire         cmd_xbar_demux_src4_ready;                                                                // cmd_xbar_mux_004:sink0_ready -> cmd_xbar_demux:src4_ready
	wire         cmd_xbar_demux_src5_endofpacket;                                                          // cmd_xbar_demux:src5_endofpacket -> cmd_xbar_mux_005:sink0_endofpacket
	wire         cmd_xbar_demux_src5_valid;                                                                // cmd_xbar_demux:src5_valid -> cmd_xbar_mux_005:sink0_valid
	wire         cmd_xbar_demux_src5_startofpacket;                                                        // cmd_xbar_demux:src5_startofpacket -> cmd_xbar_mux_005:sink0_startofpacket
	wire  [82:0] cmd_xbar_demux_src5_data;                                                                 // cmd_xbar_demux:src5_data -> cmd_xbar_mux_005:sink0_data
	wire   [5:0] cmd_xbar_demux_src5_channel;                                                              // cmd_xbar_demux:src5_channel -> cmd_xbar_mux_005:sink0_channel
	wire         cmd_xbar_demux_src5_ready;                                                                // cmd_xbar_mux_005:sink0_ready -> cmd_xbar_demux:src5_ready
	wire         rsp_xbar_demux_src0_endofpacket;                                                          // rsp_xbar_demux:src0_endofpacket -> rsp_xbar_mux:sink0_endofpacket
	wire         rsp_xbar_demux_src0_valid;                                                                // rsp_xbar_demux:src0_valid -> rsp_xbar_mux:sink0_valid
	wire         rsp_xbar_demux_src0_startofpacket;                                                        // rsp_xbar_demux:src0_startofpacket -> rsp_xbar_mux:sink0_startofpacket
	wire  [82:0] rsp_xbar_demux_src0_data;                                                                 // rsp_xbar_demux:src0_data -> rsp_xbar_mux:sink0_data
	wire   [5:0] rsp_xbar_demux_src0_channel;                                                              // rsp_xbar_demux:src0_channel -> rsp_xbar_mux:sink0_channel
	wire         rsp_xbar_demux_src0_ready;                                                                // rsp_xbar_mux:sink0_ready -> rsp_xbar_demux:src0_ready
	wire         rsp_xbar_demux_001_src0_endofpacket;                                                      // rsp_xbar_demux_001:src0_endofpacket -> rsp_xbar_mux:sink1_endofpacket
	wire         rsp_xbar_demux_001_src0_valid;                                                            // rsp_xbar_demux_001:src0_valid -> rsp_xbar_mux:sink1_valid
	wire         rsp_xbar_demux_001_src0_startofpacket;                                                    // rsp_xbar_demux_001:src0_startofpacket -> rsp_xbar_mux:sink1_startofpacket
	wire  [82:0] rsp_xbar_demux_001_src0_data;                                                             // rsp_xbar_demux_001:src0_data -> rsp_xbar_mux:sink1_data
	wire   [5:0] rsp_xbar_demux_001_src0_channel;                                                          // rsp_xbar_demux_001:src0_channel -> rsp_xbar_mux:sink1_channel
	wire         rsp_xbar_demux_001_src0_ready;                                                            // rsp_xbar_mux:sink1_ready -> rsp_xbar_demux_001:src0_ready
	wire         rsp_xbar_demux_002_src0_endofpacket;                                                      // rsp_xbar_demux_002:src0_endofpacket -> rsp_xbar_mux:sink2_endofpacket
	wire         rsp_xbar_demux_002_src0_valid;                                                            // rsp_xbar_demux_002:src0_valid -> rsp_xbar_mux:sink2_valid
	wire         rsp_xbar_demux_002_src0_startofpacket;                                                    // rsp_xbar_demux_002:src0_startofpacket -> rsp_xbar_mux:sink2_startofpacket
	wire  [82:0] rsp_xbar_demux_002_src0_data;                                                             // rsp_xbar_demux_002:src0_data -> rsp_xbar_mux:sink2_data
	wire   [5:0] rsp_xbar_demux_002_src0_channel;                                                          // rsp_xbar_demux_002:src0_channel -> rsp_xbar_mux:sink2_channel
	wire         rsp_xbar_demux_002_src0_ready;                                                            // rsp_xbar_mux:sink2_ready -> rsp_xbar_demux_002:src0_ready
	wire         rsp_xbar_demux_003_src0_endofpacket;                                                      // rsp_xbar_demux_003:src0_endofpacket -> rsp_xbar_mux:sink3_endofpacket
	wire         rsp_xbar_demux_003_src0_valid;                                                            // rsp_xbar_demux_003:src0_valid -> rsp_xbar_mux:sink3_valid
	wire         rsp_xbar_demux_003_src0_startofpacket;                                                    // rsp_xbar_demux_003:src0_startofpacket -> rsp_xbar_mux:sink3_startofpacket
	wire  [82:0] rsp_xbar_demux_003_src0_data;                                                             // rsp_xbar_demux_003:src0_data -> rsp_xbar_mux:sink3_data
	wire   [5:0] rsp_xbar_demux_003_src0_channel;                                                          // rsp_xbar_demux_003:src0_channel -> rsp_xbar_mux:sink3_channel
	wire         rsp_xbar_demux_003_src0_ready;                                                            // rsp_xbar_mux:sink3_ready -> rsp_xbar_demux_003:src0_ready
	wire         rsp_xbar_demux_004_src0_endofpacket;                                                      // rsp_xbar_demux_004:src0_endofpacket -> rsp_xbar_mux:sink4_endofpacket
	wire         rsp_xbar_demux_004_src0_valid;                                                            // rsp_xbar_demux_004:src0_valid -> rsp_xbar_mux:sink4_valid
	wire         rsp_xbar_demux_004_src0_startofpacket;                                                    // rsp_xbar_demux_004:src0_startofpacket -> rsp_xbar_mux:sink4_startofpacket
	wire  [82:0] rsp_xbar_demux_004_src0_data;                                                             // rsp_xbar_demux_004:src0_data -> rsp_xbar_mux:sink4_data
	wire   [5:0] rsp_xbar_demux_004_src0_channel;                                                          // rsp_xbar_demux_004:src0_channel -> rsp_xbar_mux:sink4_channel
	wire         rsp_xbar_demux_004_src0_ready;                                                            // rsp_xbar_mux:sink4_ready -> rsp_xbar_demux_004:src0_ready
	wire         rsp_xbar_demux_005_src0_endofpacket;                                                      // rsp_xbar_demux_005:src0_endofpacket -> rsp_xbar_mux:sink5_endofpacket
	wire         rsp_xbar_demux_005_src0_valid;                                                            // rsp_xbar_demux_005:src0_valid -> rsp_xbar_mux:sink5_valid
	wire         rsp_xbar_demux_005_src0_startofpacket;                                                    // rsp_xbar_demux_005:src0_startofpacket -> rsp_xbar_mux:sink5_startofpacket
	wire  [82:0] rsp_xbar_demux_005_src0_data;                                                             // rsp_xbar_demux_005:src0_data -> rsp_xbar_mux:sink5_data
	wire   [5:0] rsp_xbar_demux_005_src0_channel;                                                          // rsp_xbar_demux_005:src0_channel -> rsp_xbar_mux:sink5_channel
	wire         rsp_xbar_demux_005_src0_ready;                                                            // rsp_xbar_mux:sink5_ready -> rsp_xbar_demux_005:src0_ready
	wire         limiter_cmd_src_endofpacket;                                                              // limiter:cmd_src_endofpacket -> limiter_pipeline:in_endofpacket
	wire   [0:0] limiter_cmd_src_valid;                                                                    // limiter:cmd_src_valid -> limiter_pipeline:in_valid
	wire         limiter_cmd_src_startofpacket;                                                            // limiter:cmd_src_startofpacket -> limiter_pipeline:in_startofpacket
	wire  [82:0] limiter_cmd_src_data;                                                                     // limiter:cmd_src_data -> limiter_pipeline:in_data
	wire   [5:0] limiter_cmd_src_channel;                                                                  // limiter:cmd_src_channel -> limiter_pipeline:in_channel
	wire         limiter_cmd_src_ready;                                                                    // limiter_pipeline:in_ready -> limiter:cmd_src_ready
	wire         limiter_pipeline_source0_endofpacket;                                                     // limiter_pipeline:out_endofpacket -> cmd_xbar_demux:sink_endofpacket
	wire         limiter_pipeline_source0_valid;                                                           // limiter_pipeline:out_valid -> cmd_xbar_demux:sink_valid
	wire         limiter_pipeline_source0_startofpacket;                                                   // limiter_pipeline:out_startofpacket -> cmd_xbar_demux:sink_startofpacket
	wire  [82:0] limiter_pipeline_source0_data;                                                            // limiter_pipeline:out_data -> cmd_xbar_demux:sink_data
	wire   [5:0] limiter_pipeline_source0_channel;                                                         // limiter_pipeline:out_channel -> cmd_xbar_demux:sink_channel
	wire         limiter_pipeline_source0_ready;                                                           // cmd_xbar_demux:sink_ready -> limiter_pipeline:out_ready
	wire         rsp_xbar_mux_src_endofpacket;                                                             // rsp_xbar_mux:src_endofpacket -> limiter_pipeline_001:in_endofpacket
	wire         rsp_xbar_mux_src_valid;                                                                   // rsp_xbar_mux:src_valid -> limiter_pipeline_001:in_valid
	wire         rsp_xbar_mux_src_startofpacket;                                                           // rsp_xbar_mux:src_startofpacket -> limiter_pipeline_001:in_startofpacket
	wire  [82:0] rsp_xbar_mux_src_data;                                                                    // rsp_xbar_mux:src_data -> limiter_pipeline_001:in_data
	wire   [5:0] rsp_xbar_mux_src_channel;                                                                 // rsp_xbar_mux:src_channel -> limiter_pipeline_001:in_channel
	wire         rsp_xbar_mux_src_ready;                                                                   // limiter_pipeline_001:in_ready -> rsp_xbar_mux:src_ready
	wire         limiter_pipeline_001_source0_endofpacket;                                                 // limiter_pipeline_001:out_endofpacket -> limiter:rsp_sink_endofpacket
	wire         limiter_pipeline_001_source0_valid;                                                       // limiter_pipeline_001:out_valid -> limiter:rsp_sink_valid
	wire         limiter_pipeline_001_source0_startofpacket;                                               // limiter_pipeline_001:out_startofpacket -> limiter:rsp_sink_startofpacket
	wire  [82:0] limiter_pipeline_001_source0_data;                                                        // limiter_pipeline_001:out_data -> limiter:rsp_sink_data
	wire   [5:0] limiter_pipeline_001_source0_channel;                                                     // limiter_pipeline_001:out_channel -> limiter:rsp_sink_channel
	wire         limiter_pipeline_001_source0_ready;                                                       // limiter:rsp_sink_ready -> limiter_pipeline_001:out_ready
	wire         cmd_xbar_mux_src_endofpacket;                                                             // cmd_xbar_mux:src_endofpacket -> agent_pipeline:in_endofpacket
	wire         cmd_xbar_mux_src_valid;                                                                   // cmd_xbar_mux:src_valid -> agent_pipeline:in_valid
	wire         cmd_xbar_mux_src_startofpacket;                                                           // cmd_xbar_mux:src_startofpacket -> agent_pipeline:in_startofpacket
	wire  [82:0] cmd_xbar_mux_src_data;                                                                    // cmd_xbar_mux:src_data -> agent_pipeline:in_data
	wire   [5:0] cmd_xbar_mux_src_channel;                                                                 // cmd_xbar_mux:src_channel -> agent_pipeline:in_channel
	wire         cmd_xbar_mux_src_ready;                                                                   // agent_pipeline:in_ready -> cmd_xbar_mux:src_ready
	wire         agent_pipeline_source0_endofpacket;                                                       // agent_pipeline:out_endofpacket -> timer_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         agent_pipeline_source0_valid;                                                             // agent_pipeline:out_valid -> timer_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         agent_pipeline_source0_startofpacket;                                                     // agent_pipeline:out_startofpacket -> timer_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [82:0] agent_pipeline_source0_data;                                                              // agent_pipeline:out_data -> timer_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [5:0] agent_pipeline_source0_channel;                                                           // agent_pipeline:out_channel -> timer_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         agent_pipeline_source0_ready;                                                             // timer_s1_translator_avalon_universal_slave_0_agent:cp_ready -> agent_pipeline:out_ready
	wire         timer_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                        // timer_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> agent_pipeline_001:in_endofpacket
	wire         timer_s1_translator_avalon_universal_slave_0_agent_rp_valid;                              // timer_s1_translator_avalon_universal_slave_0_agent:rp_valid -> agent_pipeline_001:in_valid
	wire         timer_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                      // timer_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> agent_pipeline_001:in_startofpacket
	wire  [82:0] timer_s1_translator_avalon_universal_slave_0_agent_rp_data;                               // timer_s1_translator_avalon_universal_slave_0_agent:rp_data -> agent_pipeline_001:in_data
	wire         timer_s1_translator_avalon_universal_slave_0_agent_rp_ready;                              // agent_pipeline_001:in_ready -> timer_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         agent_pipeline_001_source0_endofpacket;                                                   // agent_pipeline_001:out_endofpacket -> id_router:sink_endofpacket
	wire         agent_pipeline_001_source0_valid;                                                         // agent_pipeline_001:out_valid -> id_router:sink_valid
	wire         agent_pipeline_001_source0_startofpacket;                                                 // agent_pipeline_001:out_startofpacket -> id_router:sink_startofpacket
	wire  [82:0] agent_pipeline_001_source0_data;                                                          // agent_pipeline_001:out_data -> id_router:sink_data
	wire         agent_pipeline_001_source0_ready;                                                         // id_router:sink_ready -> agent_pipeline_001:out_ready
	wire         cmd_xbar_mux_001_src_endofpacket;                                                         // cmd_xbar_mux_001:src_endofpacket -> agent_pipeline_002:in_endofpacket
	wire         cmd_xbar_mux_001_src_valid;                                                               // cmd_xbar_mux_001:src_valid -> agent_pipeline_002:in_valid
	wire         cmd_xbar_mux_001_src_startofpacket;                                                       // cmd_xbar_mux_001:src_startofpacket -> agent_pipeline_002:in_startofpacket
	wire  [82:0] cmd_xbar_mux_001_src_data;                                                                // cmd_xbar_mux_001:src_data -> agent_pipeline_002:in_data
	wire   [5:0] cmd_xbar_mux_001_src_channel;                                                             // cmd_xbar_mux_001:src_channel -> agent_pipeline_002:in_channel
	wire         cmd_xbar_mux_001_src_ready;                                                               // agent_pipeline_002:in_ready -> cmd_xbar_mux_001:src_ready
	wire         agent_pipeline_002_source0_endofpacket;                                                   // agent_pipeline_002:out_endofpacket -> sysid_control_slave_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         agent_pipeline_002_source0_valid;                                                         // agent_pipeline_002:out_valid -> sysid_control_slave_translator_avalon_universal_slave_0_agent:cp_valid
	wire         agent_pipeline_002_source0_startofpacket;                                                 // agent_pipeline_002:out_startofpacket -> sysid_control_slave_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [82:0] agent_pipeline_002_source0_data;                                                          // agent_pipeline_002:out_data -> sysid_control_slave_translator_avalon_universal_slave_0_agent:cp_data
	wire   [5:0] agent_pipeline_002_source0_channel;                                                       // agent_pipeline_002:out_channel -> sysid_control_slave_translator_avalon_universal_slave_0_agent:cp_channel
	wire         agent_pipeline_002_source0_ready;                                                         // sysid_control_slave_translator_avalon_universal_slave_0_agent:cp_ready -> agent_pipeline_002:out_ready
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket;             // sysid_control_slave_translator_avalon_universal_slave_0_agent:rp_endofpacket -> agent_pipeline_003:in_endofpacket
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_valid;                   // sysid_control_slave_translator_avalon_universal_slave_0_agent:rp_valid -> agent_pipeline_003:in_valid
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket;           // sysid_control_slave_translator_avalon_universal_slave_0_agent:rp_startofpacket -> agent_pipeline_003:in_startofpacket
	wire  [82:0] sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_data;                    // sysid_control_slave_translator_avalon_universal_slave_0_agent:rp_data -> agent_pipeline_003:in_data
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_ready;                   // agent_pipeline_003:in_ready -> sysid_control_slave_translator_avalon_universal_slave_0_agent:rp_ready
	wire         agent_pipeline_003_source0_endofpacket;                                                   // agent_pipeline_003:out_endofpacket -> id_router_001:sink_endofpacket
	wire         agent_pipeline_003_source0_valid;                                                         // agent_pipeline_003:out_valid -> id_router_001:sink_valid
	wire         agent_pipeline_003_source0_startofpacket;                                                 // agent_pipeline_003:out_startofpacket -> id_router_001:sink_startofpacket
	wire  [82:0] agent_pipeline_003_source0_data;                                                          // agent_pipeline_003:out_data -> id_router_001:sink_data
	wire         agent_pipeline_003_source0_ready;                                                         // id_router_001:sink_ready -> agent_pipeline_003:out_ready
	wire         cmd_xbar_mux_002_src_endofpacket;                                                         // cmd_xbar_mux_002:src_endofpacket -> agent_pipeline_004:in_endofpacket
	wire         cmd_xbar_mux_002_src_valid;                                                               // cmd_xbar_mux_002:src_valid -> agent_pipeline_004:in_valid
	wire         cmd_xbar_mux_002_src_startofpacket;                                                       // cmd_xbar_mux_002:src_startofpacket -> agent_pipeline_004:in_startofpacket
	wire  [82:0] cmd_xbar_mux_002_src_data;                                                                // cmd_xbar_mux_002:src_data -> agent_pipeline_004:in_data
	wire   [5:0] cmd_xbar_mux_002_src_channel;                                                             // cmd_xbar_mux_002:src_channel -> agent_pipeline_004:in_channel
	wire         cmd_xbar_mux_002_src_ready;                                                               // agent_pipeline_004:in_ready -> cmd_xbar_mux_002:src_ready
	wire         agent_pipeline_004_source0_endofpacket;                                                   // agent_pipeline_004:out_endofpacket -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         agent_pipeline_004_source0_valid;                                                         // agent_pipeline_004:out_valid -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         agent_pipeline_004_source0_startofpacket;                                                 // agent_pipeline_004:out_startofpacket -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [82:0] agent_pipeline_004_source0_data;                                                          // agent_pipeline_004:out_data -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [5:0] agent_pipeline_004_source0_channel;                                                       // agent_pipeline_004:out_channel -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         agent_pipeline_004_source0_ready;                                                         // i2c_scl_s1_translator_avalon_universal_slave_0_agent:cp_ready -> agent_pipeline_004:out_ready
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                      // i2c_scl_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> agent_pipeline_005:in_endofpacket
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_valid;                            // i2c_scl_s1_translator_avalon_universal_slave_0_agent:rp_valid -> agent_pipeline_005:in_valid
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                    // i2c_scl_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> agent_pipeline_005:in_startofpacket
	wire  [82:0] i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_data;                             // i2c_scl_s1_translator_avalon_universal_slave_0_agent:rp_data -> agent_pipeline_005:in_data
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_ready;                            // agent_pipeline_005:in_ready -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         agent_pipeline_005_source0_endofpacket;                                                   // agent_pipeline_005:out_endofpacket -> id_router_002:sink_endofpacket
	wire         agent_pipeline_005_source0_valid;                                                         // agent_pipeline_005:out_valid -> id_router_002:sink_valid
	wire         agent_pipeline_005_source0_startofpacket;                                                 // agent_pipeline_005:out_startofpacket -> id_router_002:sink_startofpacket
	wire  [82:0] agent_pipeline_005_source0_data;                                                          // agent_pipeline_005:out_data -> id_router_002:sink_data
	wire         agent_pipeline_005_source0_ready;                                                         // id_router_002:sink_ready -> agent_pipeline_005:out_ready
	wire         cmd_xbar_mux_003_src_endofpacket;                                                         // cmd_xbar_mux_003:src_endofpacket -> agent_pipeline_006:in_endofpacket
	wire         cmd_xbar_mux_003_src_valid;                                                               // cmd_xbar_mux_003:src_valid -> agent_pipeline_006:in_valid
	wire         cmd_xbar_mux_003_src_startofpacket;                                                       // cmd_xbar_mux_003:src_startofpacket -> agent_pipeline_006:in_startofpacket
	wire  [82:0] cmd_xbar_mux_003_src_data;                                                                // cmd_xbar_mux_003:src_data -> agent_pipeline_006:in_data
	wire   [5:0] cmd_xbar_mux_003_src_channel;                                                             // cmd_xbar_mux_003:src_channel -> agent_pipeline_006:in_channel
	wire         cmd_xbar_mux_003_src_ready;                                                               // agent_pipeline_006:in_ready -> cmd_xbar_mux_003:src_ready
	wire         agent_pipeline_006_source0_endofpacket;                                                   // agent_pipeline_006:out_endofpacket -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         agent_pipeline_006_source0_valid;                                                         // agent_pipeline_006:out_valid -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         agent_pipeline_006_source0_startofpacket;                                                 // agent_pipeline_006:out_startofpacket -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [82:0] agent_pipeline_006_source0_data;                                                          // agent_pipeline_006:out_data -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [5:0] agent_pipeline_006_source0_channel;                                                       // agent_pipeline_006:out_channel -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         agent_pipeline_006_source0_ready;                                                         // i2c_sda_s1_translator_avalon_universal_slave_0_agent:cp_ready -> agent_pipeline_006:out_ready
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                      // i2c_sda_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> agent_pipeline_007:in_endofpacket
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_valid;                            // i2c_sda_s1_translator_avalon_universal_slave_0_agent:rp_valid -> agent_pipeline_007:in_valid
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                    // i2c_sda_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> agent_pipeline_007:in_startofpacket
	wire  [82:0] i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_data;                             // i2c_sda_s1_translator_avalon_universal_slave_0_agent:rp_data -> agent_pipeline_007:in_data
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_ready;                            // agent_pipeline_007:in_ready -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         agent_pipeline_007_source0_endofpacket;                                                   // agent_pipeline_007:out_endofpacket -> id_router_003:sink_endofpacket
	wire         agent_pipeline_007_source0_valid;                                                         // agent_pipeline_007:out_valid -> id_router_003:sink_valid
	wire         agent_pipeline_007_source0_startofpacket;                                                 // agent_pipeline_007:out_startofpacket -> id_router_003:sink_startofpacket
	wire  [82:0] agent_pipeline_007_source0_data;                                                          // agent_pipeline_007:out_data -> id_router_003:sink_data
	wire         agent_pipeline_007_source0_ready;                                                         // id_router_003:sink_ready -> agent_pipeline_007:out_ready
	wire         cmd_xbar_mux_004_src_endofpacket;                                                         // cmd_xbar_mux_004:src_endofpacket -> agent_pipeline_008:in_endofpacket
	wire         cmd_xbar_mux_004_src_valid;                                                               // cmd_xbar_mux_004:src_valid -> agent_pipeline_008:in_valid
	wire         cmd_xbar_mux_004_src_startofpacket;                                                       // cmd_xbar_mux_004:src_startofpacket -> agent_pipeline_008:in_startofpacket
	wire  [82:0] cmd_xbar_mux_004_src_data;                                                                // cmd_xbar_mux_004:src_data -> agent_pipeline_008:in_data
	wire   [5:0] cmd_xbar_mux_004_src_channel;                                                             // cmd_xbar_mux_004:src_channel -> agent_pipeline_008:in_channel
	wire         cmd_xbar_mux_004_src_ready;                                                               // agent_pipeline_008:in_ready -> cmd_xbar_mux_004:src_ready
	wire         agent_pipeline_008_source0_endofpacket;                                                   // agent_pipeline_008:out_endofpacket -> td_status_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         agent_pipeline_008_source0_valid;                                                         // agent_pipeline_008:out_valid -> td_status_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         agent_pipeline_008_source0_startofpacket;                                                 // agent_pipeline_008:out_startofpacket -> td_status_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [82:0] agent_pipeline_008_source0_data;                                                          // agent_pipeline_008:out_data -> td_status_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [5:0] agent_pipeline_008_source0_channel;                                                       // agent_pipeline_008:out_channel -> td_status_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         agent_pipeline_008_source0_ready;                                                         // td_status_s1_translator_avalon_universal_slave_0_agent:cp_ready -> agent_pipeline_008:out_ready
	wire         td_status_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                    // td_status_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> agent_pipeline_009:in_endofpacket
	wire         td_status_s1_translator_avalon_universal_slave_0_agent_rp_valid;                          // td_status_s1_translator_avalon_universal_slave_0_agent:rp_valid -> agent_pipeline_009:in_valid
	wire         td_status_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                  // td_status_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> agent_pipeline_009:in_startofpacket
	wire  [82:0] td_status_s1_translator_avalon_universal_slave_0_agent_rp_data;                           // td_status_s1_translator_avalon_universal_slave_0_agent:rp_data -> agent_pipeline_009:in_data
	wire         td_status_s1_translator_avalon_universal_slave_0_agent_rp_ready;                          // agent_pipeline_009:in_ready -> td_status_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         agent_pipeline_009_source0_endofpacket;                                                   // agent_pipeline_009:out_endofpacket -> id_router_004:sink_endofpacket
	wire         agent_pipeline_009_source0_valid;                                                         // agent_pipeline_009:out_valid -> id_router_004:sink_valid
	wire         agent_pipeline_009_source0_startofpacket;                                                 // agent_pipeline_009:out_startofpacket -> id_router_004:sink_startofpacket
	wire  [82:0] agent_pipeline_009_source0_data;                                                          // agent_pipeline_009:out_data -> id_router_004:sink_data
	wire         agent_pipeline_009_source0_ready;                                                         // id_router_004:sink_ready -> agent_pipeline_009:out_ready
	wire         cmd_xbar_mux_005_src_endofpacket;                                                         // cmd_xbar_mux_005:src_endofpacket -> agent_pipeline_010:in_endofpacket
	wire         cmd_xbar_mux_005_src_valid;                                                               // cmd_xbar_mux_005:src_valid -> agent_pipeline_010:in_valid
	wire         cmd_xbar_mux_005_src_startofpacket;                                                       // cmd_xbar_mux_005:src_startofpacket -> agent_pipeline_010:in_startofpacket
	wire  [82:0] cmd_xbar_mux_005_src_data;                                                                // cmd_xbar_mux_005:src_data -> agent_pipeline_010:in_data
	wire   [5:0] cmd_xbar_mux_005_src_channel;                                                             // cmd_xbar_mux_005:src_channel -> agent_pipeline_010:in_channel
	wire         cmd_xbar_mux_005_src_ready;                                                               // agent_pipeline_010:in_ready -> cmd_xbar_mux_005:src_ready
	wire         agent_pipeline_010_source0_endofpacket;                                                   // agent_pipeline_010:out_endofpacket -> td_reset_n_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         agent_pipeline_010_source0_valid;                                                         // agent_pipeline_010:out_valid -> td_reset_n_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         agent_pipeline_010_source0_startofpacket;                                                 // agent_pipeline_010:out_startofpacket -> td_reset_n_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [82:0] agent_pipeline_010_source0_data;                                                          // agent_pipeline_010:out_data -> td_reset_n_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [5:0] agent_pipeline_010_source0_channel;                                                       // agent_pipeline_010:out_channel -> td_reset_n_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         agent_pipeline_010_source0_ready;                                                         // td_reset_n_s1_translator_avalon_universal_slave_0_agent:cp_ready -> agent_pipeline_010:out_ready
	wire         td_reset_n_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                   // td_reset_n_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> agent_pipeline_011:in_endofpacket
	wire         td_reset_n_s1_translator_avalon_universal_slave_0_agent_rp_valid;                         // td_reset_n_s1_translator_avalon_universal_slave_0_agent:rp_valid -> agent_pipeline_011:in_valid
	wire         td_reset_n_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                 // td_reset_n_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> agent_pipeline_011:in_startofpacket
	wire  [82:0] td_reset_n_s1_translator_avalon_universal_slave_0_agent_rp_data;                          // td_reset_n_s1_translator_avalon_universal_slave_0_agent:rp_data -> agent_pipeline_011:in_data
	wire         td_reset_n_s1_translator_avalon_universal_slave_0_agent_rp_ready;                         // agent_pipeline_011:in_ready -> td_reset_n_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         agent_pipeline_011_source0_endofpacket;                                                   // agent_pipeline_011:out_endofpacket -> id_router_005:sink_endofpacket
	wire         agent_pipeline_011_source0_valid;                                                         // agent_pipeline_011:out_valid -> id_router_005:sink_valid
	wire         agent_pipeline_011_source0_startofpacket;                                                 // agent_pipeline_011:out_startofpacket -> id_router_005:sink_startofpacket
	wire  [82:0] agent_pipeline_011_source0_data;                                                          // agent_pipeline_011:out_data -> id_router_005:sink_data
	wire         agent_pipeline_011_source0_ready;                                                         // id_router_005:sink_ready -> agent_pipeline_011:out_ready

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (9),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (9),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (1),
		.USE_READDATAVALID           (1),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) clock_crossing_io_slow_m0_translator (
		.clk                      (pll_sys_outclk2_clk),                                                          //                       clk.clk
		.reset                    (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),                  //                     reset.reset
		.uav_address              (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount           (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read                 (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write                (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest          (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid        (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable           (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata             (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata            (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock                 (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess          (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address               (clock_crossing_io_slow_m0_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest           (clock_crossing_io_slow_m0_waitrequest),                                        //                          .waitrequest
		.av_burstcount            (clock_crossing_io_slow_m0_burstcount),                                         //                          .burstcount
		.av_byteenable            (clock_crossing_io_slow_m0_byteenable),                                         //                          .byteenable
		.av_read                  (clock_crossing_io_slow_m0_read),                                               //                          .read
		.av_readdata              (clock_crossing_io_slow_m0_readdata),                                           //                          .readdata
		.av_readdatavalid         (clock_crossing_io_slow_m0_readdatavalid),                                      //                          .readdatavalid
		.av_write                 (clock_crossing_io_slow_m0_write),                                              //                          .write
		.av_writedata             (clock_crossing_io_slow_m0_writedata),                                          //                          .writedata
		.av_debugaccess           (clock_crossing_io_slow_m0_debugaccess),                                        //                          .debugaccess
		.av_beginbursttransfer    (1'b0),                                                                         //               (terminated)
		.av_begintransfer         (1'b0),                                                                         //               (terminated)
		.av_chipselect            (1'b0),                                                                         //               (terminated)
		.av_lock                  (1'b0),                                                                         //               (terminated)
		.uav_clken                (),                                                                             //               (terminated)
		.av_clken                 (1'b1),                                                                         //               (terminated)
		.uav_response             (2'b00),                                                                        //               (terminated)
		.av_response              (),                                                                             //               (terminated)
		.uav_writeresponserequest (),                                                                             //               (terminated)
		.uav_writeresponsevalid   (1'b0),                                                                         //               (terminated)
		.av_writeresponserequest  (1'b0),                                                                         //               (terminated)
		.av_writeresponsevalid    ()                                                                              //               (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (9),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) timer_s1_translator (
		.clk                      (pll_sys_outclk2_clk),                                                 //                      clk.clk
		.reset                    (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),         //                    reset.reset
		.uav_address              (timer_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (timer_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (timer_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (timer_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (timer_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (timer_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (timer_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (timer_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (timer_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (timer_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (timer_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (timer_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (timer_s1_write),                                                      //                         .write
		.av_readdata              (timer_s1_readdata),                                                   //                         .readdata
		.av_writedata             (timer_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (timer_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                    //              (terminated)
		.av_begintransfer         (),                                                                    //              (terminated)
		.av_beginbursttransfer    (),                                                                    //              (terminated)
		.av_burstcount            (),                                                                    //              (terminated)
		.av_byteenable            (),                                                                    //              (terminated)
		.av_readdatavalid         (1'b0),                                                                //              (terminated)
		.av_waitrequest           (1'b0),                                                                //              (terminated)
		.av_writebyteenable       (),                                                                    //              (terminated)
		.av_lock                  (),                                                                    //              (terminated)
		.av_clken                 (),                                                                    //              (terminated)
		.uav_clken                (1'b0),                                                                //              (terminated)
		.av_debugaccess           (),                                                                    //              (terminated)
		.av_outputenable          (),                                                                    //              (terminated)
		.uav_response             (),                                                                    //              (terminated)
		.av_response              (2'b00),                                                               //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                //              (terminated)
		.uav_writeresponsevalid   (),                                                                    //              (terminated)
		.av_writeresponserequest  (),                                                                    //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                 //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (9),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sysid_control_slave_translator (
		.clk                      (pll_sys_outclk2_clk),                                                            //                      clk.clk
		.reset                    (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),                    //                    reset.reset
		.uav_address              (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (sysid_control_slave_address),                                                    //      avalon_anti_slave_0.address
		.av_readdata              (sysid_control_slave_readdata),                                                   //                         .readdata
		.av_write                 (),                                                                               //              (terminated)
		.av_read                  (),                                                                               //              (terminated)
		.av_writedata             (),                                                                               //              (terminated)
		.av_begintransfer         (),                                                                               //              (terminated)
		.av_beginbursttransfer    (),                                                                               //              (terminated)
		.av_burstcount            (),                                                                               //              (terminated)
		.av_byteenable            (),                                                                               //              (terminated)
		.av_readdatavalid         (1'b0),                                                                           //              (terminated)
		.av_waitrequest           (1'b0),                                                                           //              (terminated)
		.av_writebyteenable       (),                                                                               //              (terminated)
		.av_lock                  (),                                                                               //              (terminated)
		.av_chipselect            (),                                                                               //              (terminated)
		.av_clken                 (),                                                                               //              (terminated)
		.uav_clken                (1'b0),                                                                           //              (terminated)
		.av_debugaccess           (),                                                                               //              (terminated)
		.av_outputenable          (),                                                                               //              (terminated)
		.uav_response             (),                                                                               //              (terminated)
		.av_response              (2'b00),                                                                          //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                           //              (terminated)
		.uav_writeresponsevalid   (),                                                                               //              (terminated)
		.av_writeresponserequest  (),                                                                               //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                            //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (9),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) i2c_scl_s1_translator (
		.clk                      (pll_sys_outclk2_clk),                                                   //                      clk.clk
		.reset                    (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),           //                    reset.reset
		.uav_address              (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (i2c_scl_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (i2c_scl_s1_write),                                                      //                         .write
		.av_readdata              (i2c_scl_s1_readdata),                                                   //                         .readdata
		.av_writedata             (i2c_scl_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (i2c_scl_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                      //              (terminated)
		.av_begintransfer         (),                                                                      //              (terminated)
		.av_beginbursttransfer    (),                                                                      //              (terminated)
		.av_burstcount            (),                                                                      //              (terminated)
		.av_byteenable            (),                                                                      //              (terminated)
		.av_readdatavalid         (1'b0),                                                                  //              (terminated)
		.av_waitrequest           (1'b0),                                                                  //              (terminated)
		.av_writebyteenable       (),                                                                      //              (terminated)
		.av_lock                  (),                                                                      //              (terminated)
		.av_clken                 (),                                                                      //              (terminated)
		.uav_clken                (1'b0),                                                                  //              (terminated)
		.av_debugaccess           (),                                                                      //              (terminated)
		.av_outputenable          (),                                                                      //              (terminated)
		.uav_response             (),                                                                      //              (terminated)
		.av_response              (2'b00),                                                                 //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                  //              (terminated)
		.uav_writeresponsevalid   (),                                                                      //              (terminated)
		.av_writeresponserequest  (),                                                                      //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                   //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (9),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) i2c_sda_s1_translator (
		.clk                      (pll_sys_outclk2_clk),                                                   //                      clk.clk
		.reset                    (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),           //                    reset.reset
		.uav_address              (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (i2c_sda_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (i2c_sda_s1_write),                                                      //                         .write
		.av_readdata              (i2c_sda_s1_readdata),                                                   //                         .readdata
		.av_writedata             (i2c_sda_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (i2c_sda_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                      //              (terminated)
		.av_begintransfer         (),                                                                      //              (terminated)
		.av_beginbursttransfer    (),                                                                      //              (terminated)
		.av_burstcount            (),                                                                      //              (terminated)
		.av_byteenable            (),                                                                      //              (terminated)
		.av_readdatavalid         (1'b0),                                                                  //              (terminated)
		.av_waitrequest           (1'b0),                                                                  //              (terminated)
		.av_writebyteenable       (),                                                                      //              (terminated)
		.av_lock                  (),                                                                      //              (terminated)
		.av_clken                 (),                                                                      //              (terminated)
		.uav_clken                (1'b0),                                                                  //              (terminated)
		.av_debugaccess           (),                                                                      //              (terminated)
		.av_outputenable          (),                                                                      //              (terminated)
		.uav_response             (),                                                                      //              (terminated)
		.av_response              (2'b00),                                                                 //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                  //              (terminated)
		.uav_writeresponsevalid   (),                                                                      //              (terminated)
		.av_writeresponserequest  (),                                                                      //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                   //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (9),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) td_status_s1_translator (
		.clk                      (pll_sys_outclk2_clk),                                                     //                      clk.clk
		.reset                    (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),             //                    reset.reset
		.uav_address              (td_status_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (td_status_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (td_status_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (td_status_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (td_status_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (td_status_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (td_status_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (td_status_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (td_status_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (td_status_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (td_status_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (td_status_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_readdata              (td_status_s1_readdata),                                                   //                         .readdata
		.av_write                 (),                                                                        //              (terminated)
		.av_read                  (),                                                                        //              (terminated)
		.av_writedata             (),                                                                        //              (terminated)
		.av_begintransfer         (),                                                                        //              (terminated)
		.av_beginbursttransfer    (),                                                                        //              (terminated)
		.av_burstcount            (),                                                                        //              (terminated)
		.av_byteenable            (),                                                                        //              (terminated)
		.av_readdatavalid         (1'b0),                                                                    //              (terminated)
		.av_waitrequest           (1'b0),                                                                    //              (terminated)
		.av_writebyteenable       (),                                                                        //              (terminated)
		.av_lock                  (),                                                                        //              (terminated)
		.av_chipselect            (),                                                                        //              (terminated)
		.av_clken                 (),                                                                        //              (terminated)
		.uav_clken                (1'b0),                                                                    //              (terminated)
		.av_debugaccess           (),                                                                        //              (terminated)
		.av_outputenable          (),                                                                        //              (terminated)
		.uav_response             (),                                                                        //              (terminated)
		.av_response              (2'b00),                                                                   //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                    //              (terminated)
		.uav_writeresponsevalid   (),                                                                        //              (terminated)
		.av_writeresponserequest  (),                                                                        //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                     //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (9),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) td_reset_n_s1_translator (
		.clk                      (pll_sys_outclk2_clk),                                                      //                      clk.clk
		.reset                    (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),              //                    reset.reset
		.uav_address              (td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (td_reset_n_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (td_reset_n_s1_write),                                                      //                         .write
		.av_readdata              (td_reset_n_s1_readdata),                                                   //                         .readdata
		.av_writedata             (td_reset_n_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (td_reset_n_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                         //              (terminated)
		.av_begintransfer         (),                                                                         //              (terminated)
		.av_beginbursttransfer    (),                                                                         //              (terminated)
		.av_burstcount            (),                                                                         //              (terminated)
		.av_byteenable            (),                                                                         //              (terminated)
		.av_readdatavalid         (1'b0),                                                                     //              (terminated)
		.av_waitrequest           (1'b0),                                                                     //              (terminated)
		.av_writebyteenable       (),                                                                         //              (terminated)
		.av_lock                  (),                                                                         //              (terminated)
		.av_clken                 (),                                                                         //              (terminated)
		.uav_clken                (1'b0),                                                                     //              (terminated)
		.av_debugaccess           (),                                                                         //              (terminated)
		.av_outputenable          (),                                                                         //              (terminated)
		.uav_response             (),                                                                         //              (terminated)
		.av_response              (2'b00),                                                                    //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                     //              (terminated)
		.uav_writeresponsevalid   (),                                                                         //              (terminated)
		.av_writeresponserequest  (),                                                                         //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                      //              (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_PROTECTION_H          (73),
		.PKT_PROTECTION_L          (71),
		.PKT_BEGIN_BURST           (62),
		.PKT_BURSTWRAP_H           (54),
		.PKT_BURSTWRAP_L           (54),
		.PKT_BURST_SIZE_H          (57),
		.PKT_BURST_SIZE_L          (55),
		.PKT_BURST_TYPE_H          (59),
		.PKT_BURST_TYPE_L          (58),
		.PKT_BYTE_CNT_H            (53),
		.PKT_BYTE_CNT_L            (51),
		.PKT_ADDR_H                (44),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (45),
		.PKT_TRANS_POSTED          (46),
		.PKT_TRANS_WRITE           (47),
		.PKT_TRANS_READ            (48),
		.PKT_TRANS_LOCK            (49),
		.PKT_TRANS_EXCLUSIVE       (50),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (66),
		.PKT_SRC_ID_L              (64),
		.PKT_DEST_ID_H             (69),
		.PKT_DEST_ID_L             (67),
		.PKT_THREAD_ID_H           (70),
		.PKT_THREAD_ID_L           (70),
		.PKT_CACHE_H               (77),
		.PKT_CACHE_L               (74),
		.PKT_DATA_SIDEBAND_H       (61),
		.PKT_DATA_SIDEBAND_L       (61),
		.PKT_QOS_H                 (63),
		.PKT_QOS_L                 (63),
		.PKT_ADDR_SIDEBAND_H       (60),
		.PKT_ADDR_SIDEBAND_L       (60),
		.PKT_RESPONSE_STATUS_H     (79),
		.PKT_RESPONSE_STATUS_L     (78),
		.PKT_ORI_BURST_SIZE_L      (80),
		.PKT_ORI_BURST_SIZE_H      (82),
		.ST_DATA_W                 (83),
		.ST_CHANNEL_W              (6),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (0),
		.BURSTWRAP_VALUE           (1),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent (
		.clk                     (pll_sys_outclk2_clk),                                                                   //       clk.clk
		.reset                   (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.av_address              (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_address),                //        av.address
		.av_write                (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_write),                  //          .write
		.av_read                 (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_read),                   //          .read
		.av_writedata            (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_writedata),              //          .writedata
		.av_readdata             (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_readdata),               //          .readdata
		.av_waitrequest          (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_waitrequest),            //          .waitrequest
		.av_readdatavalid        (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_readdatavalid),          //          .readdatavalid
		.av_byteenable           (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_byteenable),             //          .byteenable
		.av_burstcount           (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_burstcount),             //          .burstcount
		.av_debugaccess          (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_debugaccess),            //          .debugaccess
		.av_lock                 (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_lock),                   //          .lock
		.cp_valid                (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent_cp_valid),         //        cp.valid
		.cp_data                 (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.cp_startofpacket        (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.cp_endofpacket          (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.cp_ready                (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent_cp_ready),         //          .ready
		.rp_valid                (limiter_rsp_src_valid),                                                                 //        rp.valid
		.rp_data                 (limiter_rsp_src_data),                                                                  //          .data
		.rp_channel              (limiter_rsp_src_channel),                                                               //          .channel
		.rp_startofpacket        (limiter_rsp_src_startofpacket),                                                         //          .startofpacket
		.rp_endofpacket          (limiter_rsp_src_endofpacket),                                                           //          .endofpacket
		.rp_ready                (limiter_rsp_src_ready),                                                                 //          .ready
		.av_response             (),                                                                                      // (terminated)
		.av_writeresponserequest (1'b0),                                                                                  // (terminated)
		.av_writeresponsevalid   ()                                                                                       // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (62),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (44),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (45),
		.PKT_TRANS_POSTED          (46),
		.PKT_TRANS_WRITE           (47),
		.PKT_TRANS_READ            (48),
		.PKT_TRANS_LOCK            (49),
		.PKT_SRC_ID_H              (66),
		.PKT_SRC_ID_L              (64),
		.PKT_DEST_ID_H             (69),
		.PKT_DEST_ID_L             (67),
		.PKT_BURSTWRAP_H           (54),
		.PKT_BURSTWRAP_L           (54),
		.PKT_BYTE_CNT_H            (53),
		.PKT_BYTE_CNT_L            (51),
		.PKT_PROTECTION_H          (73),
		.PKT_PROTECTION_L          (71),
		.PKT_RESPONSE_STATUS_H     (79),
		.PKT_RESPONSE_STATUS_L     (78),
		.PKT_BURST_SIZE_H          (57),
		.PKT_BURST_SIZE_L          (55),
		.PKT_ORI_BURST_SIZE_L      (80),
		.PKT_ORI_BURST_SIZE_H      (82),
		.ST_CHANNEL_W              (6),
		.ST_DATA_W                 (83),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) timer_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_sys_outclk2_clk),                                                           //             clk.clk
		.reset                   (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),                   //       clk_reset.reset
		.m0_address              (timer_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (timer_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (timer_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (timer_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (timer_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (timer_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (timer_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (timer_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (timer_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (timer_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (timer_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (timer_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (timer_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (timer_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (timer_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (timer_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (agent_pipeline_source0_ready),                                                  //              cp.ready
		.cp_valid                (agent_pipeline_source0_valid),                                                  //                .valid
		.cp_data                 (agent_pipeline_source0_data),                                                   //                .data
		.cp_startofpacket        (agent_pipeline_source0_startofpacket),                                          //                .startofpacket
		.cp_endofpacket          (agent_pipeline_source0_endofpacket),                                            //                .endofpacket
		.cp_channel              (agent_pipeline_source0_channel),                                                //                .channel
		.rf_sink_ready           (timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (timer_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (timer_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (timer_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (timer_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (timer_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                         //     (terminated)
		.m0_writeresponserequest (),                                                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                           //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (84),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_sys_outclk2_clk),                                                           //       clk.clk
		.reset             (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),                   // clk_reset.reset
		.in_data           (timer_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (timer_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (timer_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (timer_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (timer_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                         // (terminated)
		.csr_read          (1'b0),                                                                          // (terminated)
		.csr_write         (1'b0),                                                                          // (terminated)
		.csr_readdata      (),                                                                              // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                          // (terminated)
		.almost_full_data  (),                                                                              // (terminated)
		.almost_empty_data (),                                                                              // (terminated)
		.in_empty          (1'b0),                                                                          // (terminated)
		.out_empty         (),                                                                              // (terminated)
		.in_error          (1'b0),                                                                          // (terminated)
		.out_error         (),                                                                              // (terminated)
		.in_channel        (1'b0),                                                                          // (terminated)
		.out_channel       ()                                                                               // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (62),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (44),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (45),
		.PKT_TRANS_POSTED          (46),
		.PKT_TRANS_WRITE           (47),
		.PKT_TRANS_READ            (48),
		.PKT_TRANS_LOCK            (49),
		.PKT_SRC_ID_H              (66),
		.PKT_SRC_ID_L              (64),
		.PKT_DEST_ID_H             (69),
		.PKT_DEST_ID_L             (67),
		.PKT_BURSTWRAP_H           (54),
		.PKT_BURSTWRAP_L           (54),
		.PKT_BYTE_CNT_H            (53),
		.PKT_BYTE_CNT_L            (51),
		.PKT_PROTECTION_H          (73),
		.PKT_PROTECTION_L          (71),
		.PKT_RESPONSE_STATUS_H     (79),
		.PKT_RESPONSE_STATUS_L     (78),
		.PKT_BURST_SIZE_H          (57),
		.PKT_BURST_SIZE_L          (55),
		.PKT_ORI_BURST_SIZE_L      (80),
		.PKT_ORI_BURST_SIZE_H      (82),
		.ST_CHANNEL_W              (6),
		.ST_DATA_W                 (83),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) sysid_control_slave_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_sys_outclk2_clk),                                                                      //             clk.clk
		.reset                   (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),                              //       clk_reset.reset
		.m0_address              (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (agent_pipeline_002_source0_ready),                                                         //              cp.ready
		.cp_valid                (agent_pipeline_002_source0_valid),                                                         //                .valid
		.cp_data                 (agent_pipeline_002_source0_data),                                                          //                .data
		.cp_startofpacket        (agent_pipeline_002_source0_startofpacket),                                                 //                .startofpacket
		.cp_endofpacket          (agent_pipeline_002_source0_endofpacket),                                                   //                .endofpacket
		.cp_channel              (agent_pipeline_002_source0_channel),                                                       //                .channel
		.rf_sink_ready           (sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (sysid_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (sysid_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (sysid_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (sysid_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sysid_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sysid_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                    //     (terminated)
		.m0_writeresponserequest (),                                                                                         //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                      //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (84),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_sys_outclk2_clk),                                                                      //       clk.clk
		.reset             (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),                              // clk_reset.reset
		.in_data           (sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                    // (terminated)
		.csr_read          (1'b0),                                                                                     // (terminated)
		.csr_write         (1'b0),                                                                                     // (terminated)
		.csr_readdata      (),                                                                                         // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                     // (terminated)
		.almost_full_data  (),                                                                                         // (terminated)
		.almost_empty_data (),                                                                                         // (terminated)
		.in_empty          (1'b0),                                                                                     // (terminated)
		.out_empty         (),                                                                                         // (terminated)
		.in_error          (1'b0),                                                                                     // (terminated)
		.out_error         (),                                                                                         // (terminated)
		.in_channel        (1'b0),                                                                                     // (terminated)
		.out_channel       ()                                                                                          // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (62),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (44),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (45),
		.PKT_TRANS_POSTED          (46),
		.PKT_TRANS_WRITE           (47),
		.PKT_TRANS_READ            (48),
		.PKT_TRANS_LOCK            (49),
		.PKT_SRC_ID_H              (66),
		.PKT_SRC_ID_L              (64),
		.PKT_DEST_ID_H             (69),
		.PKT_DEST_ID_L             (67),
		.PKT_BURSTWRAP_H           (54),
		.PKT_BURSTWRAP_L           (54),
		.PKT_BYTE_CNT_H            (53),
		.PKT_BYTE_CNT_L            (51),
		.PKT_PROTECTION_H          (73),
		.PKT_PROTECTION_L          (71),
		.PKT_RESPONSE_STATUS_H     (79),
		.PKT_RESPONSE_STATUS_L     (78),
		.PKT_BURST_SIZE_H          (57),
		.PKT_BURST_SIZE_L          (55),
		.PKT_ORI_BURST_SIZE_L      (80),
		.PKT_ORI_BURST_SIZE_H      (82),
		.ST_CHANNEL_W              (6),
		.ST_DATA_W                 (83),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) i2c_scl_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_sys_outclk2_clk),                                                             //             clk.clk
		.reset                   (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),                     //       clk_reset.reset
		.m0_address              (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (agent_pipeline_004_source0_ready),                                                //              cp.ready
		.cp_valid                (agent_pipeline_004_source0_valid),                                                //                .valid
		.cp_data                 (agent_pipeline_004_source0_data),                                                 //                .data
		.cp_startofpacket        (agent_pipeline_004_source0_startofpacket),                                        //                .startofpacket
		.cp_endofpacket          (agent_pipeline_004_source0_endofpacket),                                          //                .endofpacket
		.cp_channel              (agent_pipeline_004_source0_channel),                                              //                .channel
		.rf_sink_ready           (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                           //     (terminated)
		.m0_writeresponserequest (),                                                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (84),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_sys_outclk2_clk),                                                             //       clk.clk
		.reset             (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),                     // clk_reset.reset
		.in_data           (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                           // (terminated)
		.csr_read          (1'b0),                                                                            // (terminated)
		.csr_write         (1'b0),                                                                            // (terminated)
		.csr_readdata      (),                                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                            // (terminated)
		.almost_full_data  (),                                                                                // (terminated)
		.almost_empty_data (),                                                                                // (terminated)
		.in_empty          (1'b0),                                                                            // (terminated)
		.out_empty         (),                                                                                // (terminated)
		.in_error          (1'b0),                                                                            // (terminated)
		.out_error         (),                                                                                // (terminated)
		.in_channel        (1'b0),                                                                            // (terminated)
		.out_channel       ()                                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (62),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (44),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (45),
		.PKT_TRANS_POSTED          (46),
		.PKT_TRANS_WRITE           (47),
		.PKT_TRANS_READ            (48),
		.PKT_TRANS_LOCK            (49),
		.PKT_SRC_ID_H              (66),
		.PKT_SRC_ID_L              (64),
		.PKT_DEST_ID_H             (69),
		.PKT_DEST_ID_L             (67),
		.PKT_BURSTWRAP_H           (54),
		.PKT_BURSTWRAP_L           (54),
		.PKT_BYTE_CNT_H            (53),
		.PKT_BYTE_CNT_L            (51),
		.PKT_PROTECTION_H          (73),
		.PKT_PROTECTION_L          (71),
		.PKT_RESPONSE_STATUS_H     (79),
		.PKT_RESPONSE_STATUS_L     (78),
		.PKT_BURST_SIZE_H          (57),
		.PKT_BURST_SIZE_L          (55),
		.PKT_ORI_BURST_SIZE_L      (80),
		.PKT_ORI_BURST_SIZE_H      (82),
		.ST_CHANNEL_W              (6),
		.ST_DATA_W                 (83),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) i2c_sda_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_sys_outclk2_clk),                                                             //             clk.clk
		.reset                   (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),                     //       clk_reset.reset
		.m0_address              (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (agent_pipeline_006_source0_ready),                                                //              cp.ready
		.cp_valid                (agent_pipeline_006_source0_valid),                                                //                .valid
		.cp_data                 (agent_pipeline_006_source0_data),                                                 //                .data
		.cp_startofpacket        (agent_pipeline_006_source0_startofpacket),                                        //                .startofpacket
		.cp_endofpacket          (agent_pipeline_006_source0_endofpacket),                                          //                .endofpacket
		.cp_channel              (agent_pipeline_006_source0_channel),                                              //                .channel
		.rf_sink_ready           (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                           //     (terminated)
		.m0_writeresponserequest (),                                                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (84),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_sys_outclk2_clk),                                                             //       clk.clk
		.reset             (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),                     // clk_reset.reset
		.in_data           (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                           // (terminated)
		.csr_read          (1'b0),                                                                            // (terminated)
		.csr_write         (1'b0),                                                                            // (terminated)
		.csr_readdata      (),                                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                            // (terminated)
		.almost_full_data  (),                                                                                // (terminated)
		.almost_empty_data (),                                                                                // (terminated)
		.in_empty          (1'b0),                                                                            // (terminated)
		.out_empty         (),                                                                                // (terminated)
		.in_error          (1'b0),                                                                            // (terminated)
		.out_error         (),                                                                                // (terminated)
		.in_channel        (1'b0),                                                                            // (terminated)
		.out_channel       ()                                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (62),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (44),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (45),
		.PKT_TRANS_POSTED          (46),
		.PKT_TRANS_WRITE           (47),
		.PKT_TRANS_READ            (48),
		.PKT_TRANS_LOCK            (49),
		.PKT_SRC_ID_H              (66),
		.PKT_SRC_ID_L              (64),
		.PKT_DEST_ID_H             (69),
		.PKT_DEST_ID_L             (67),
		.PKT_BURSTWRAP_H           (54),
		.PKT_BURSTWRAP_L           (54),
		.PKT_BYTE_CNT_H            (53),
		.PKT_BYTE_CNT_L            (51),
		.PKT_PROTECTION_H          (73),
		.PKT_PROTECTION_L          (71),
		.PKT_RESPONSE_STATUS_H     (79),
		.PKT_RESPONSE_STATUS_L     (78),
		.PKT_BURST_SIZE_H          (57),
		.PKT_BURST_SIZE_L          (55),
		.PKT_ORI_BURST_SIZE_L      (80),
		.PKT_ORI_BURST_SIZE_H      (82),
		.ST_CHANNEL_W              (6),
		.ST_DATA_W                 (83),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) td_status_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_sys_outclk2_clk),                                                               //             clk.clk
		.reset                   (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),                       //       clk_reset.reset
		.m0_address              (td_status_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (td_status_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (td_status_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (td_status_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (td_status_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (td_status_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (td_status_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (td_status_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (td_status_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (td_status_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (td_status_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (td_status_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (td_status_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (td_status_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (td_status_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (td_status_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (agent_pipeline_008_source0_ready),                                                  //              cp.ready
		.cp_valid                (agent_pipeline_008_source0_valid),                                                  //                .valid
		.cp_data                 (agent_pipeline_008_source0_data),                                                   //                .data
		.cp_startofpacket        (agent_pipeline_008_source0_startofpacket),                                          //                .startofpacket
		.cp_endofpacket          (agent_pipeline_008_source0_endofpacket),                                            //                .endofpacket
		.cp_channel              (agent_pipeline_008_source0_channel),                                                //                .channel
		.rf_sink_ready           (td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (td_status_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (td_status_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (td_status_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (td_status_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (td_status_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (td_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (td_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (td_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (td_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (td_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (td_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                             //     (terminated)
		.m0_writeresponserequest (),                                                                                  //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                               //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (84),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_sys_outclk2_clk),                                                               //       clk.clk
		.reset             (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),                       // clk_reset.reset
		.in_data           (td_status_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (td_status_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (td_status_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (td_status_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (td_status_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (td_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                             // (terminated)
		.csr_read          (1'b0),                                                                              // (terminated)
		.csr_write         (1'b0),                                                                              // (terminated)
		.csr_readdata      (),                                                                                  // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                              // (terminated)
		.almost_full_data  (),                                                                                  // (terminated)
		.almost_empty_data (),                                                                                  // (terminated)
		.in_empty          (1'b0),                                                                              // (terminated)
		.out_empty         (),                                                                                  // (terminated)
		.in_error          (1'b0),                                                                              // (terminated)
		.out_error         (),                                                                                  // (terminated)
		.in_channel        (1'b0),                                                                              // (terminated)
		.out_channel       ()                                                                                   // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (62),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (44),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (45),
		.PKT_TRANS_POSTED          (46),
		.PKT_TRANS_WRITE           (47),
		.PKT_TRANS_READ            (48),
		.PKT_TRANS_LOCK            (49),
		.PKT_SRC_ID_H              (66),
		.PKT_SRC_ID_L              (64),
		.PKT_DEST_ID_H             (69),
		.PKT_DEST_ID_L             (67),
		.PKT_BURSTWRAP_H           (54),
		.PKT_BURSTWRAP_L           (54),
		.PKT_BYTE_CNT_H            (53),
		.PKT_BYTE_CNT_L            (51),
		.PKT_PROTECTION_H          (73),
		.PKT_PROTECTION_L          (71),
		.PKT_RESPONSE_STATUS_H     (79),
		.PKT_RESPONSE_STATUS_L     (78),
		.PKT_BURST_SIZE_H          (57),
		.PKT_BURST_SIZE_L          (55),
		.PKT_ORI_BURST_SIZE_L      (80),
		.PKT_ORI_BURST_SIZE_H      (82),
		.ST_CHANNEL_W              (6),
		.ST_DATA_W                 (83),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) td_reset_n_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_sys_outclk2_clk),                                                                //             clk.clk
		.reset                   (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),                        //       clk_reset.reset
		.m0_address              (td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (td_reset_n_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (agent_pipeline_010_source0_ready),                                                   //              cp.ready
		.cp_valid                (agent_pipeline_010_source0_valid),                                                   //                .valid
		.cp_data                 (agent_pipeline_010_source0_data),                                                    //                .data
		.cp_startofpacket        (agent_pipeline_010_source0_startofpacket),                                           //                .startofpacket
		.cp_endofpacket          (agent_pipeline_010_source0_endofpacket),                                             //                .endofpacket
		.cp_channel              (agent_pipeline_010_source0_channel),                                                 //                .channel
		.rf_sink_ready           (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                              //     (terminated)
		.m0_writeresponserequest (),                                                                                   //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (84),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_sys_outclk2_clk),                                                                //       clk.clk
		.reset             (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),                        // clk_reset.reset
		.in_data           (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                              // (terminated)
		.csr_read          (1'b0),                                                                               // (terminated)
		.csr_write         (1'b0),                                                                               // (terminated)
		.csr_readdata      (),                                                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                               // (terminated)
		.almost_full_data  (),                                                                                   // (terminated)
		.almost_empty_data (),                                                                                   // (terminated)
		.in_empty          (1'b0),                                                                               // (terminated)
		.out_empty         (),                                                                                   // (terminated)
		.in_error          (1'b0),                                                                               // (terminated)
		.out_error         (),                                                                                   // (terminated)
		.in_channel        (1'b0),                                                                               // (terminated)
		.out_channel       ()                                                                                    // (terminated)
	);

	DE1_SoC_QSYS_mm_interconnect_2_addr_router addr_router (
		.sink_ready         (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent_cp_ready),         //      sink.ready
		.sink_valid         (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent_cp_valid),         //          .valid
		.sink_data          (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.sink_startofpacket (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (clock_crossing_io_slow_m0_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.clk                (pll_sys_outclk2_clk),                                                                   //       clk.clk
		.reset              (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.src_ready          (addr_router_src_ready),                                                                 //       src.ready
		.src_valid          (addr_router_src_valid),                                                                 //          .valid
		.src_data           (addr_router_src_data),                                                                  //          .data
		.src_channel        (addr_router_src_channel),                                                               //          .channel
		.src_startofpacket  (addr_router_src_startofpacket),                                                         //          .startofpacket
		.src_endofpacket    (addr_router_src_endofpacket)                                                            //          .endofpacket
	);

	DE1_SoC_QSYS_mm_interconnect_2_id_router id_router (
		.sink_ready         (agent_pipeline_001_source0_ready),                            //      sink.ready
		.sink_valid         (agent_pipeline_001_source0_valid),                            //          .valid
		.sink_data          (agent_pipeline_001_source0_data),                             //          .data
		.sink_startofpacket (agent_pipeline_001_source0_startofpacket),                    //          .startofpacket
		.sink_endofpacket   (agent_pipeline_001_source0_endofpacket),                      //          .endofpacket
		.clk                (pll_sys_outclk2_clk),                                         //       clk.clk
		.reset              (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (id_router_src_ready),                                         //       src.ready
		.src_valid          (id_router_src_valid),                                         //          .valid
		.src_data           (id_router_src_data),                                          //          .data
		.src_channel        (id_router_src_channel),                                       //          .channel
		.src_startofpacket  (id_router_src_startofpacket),                                 //          .startofpacket
		.src_endofpacket    (id_router_src_endofpacket)                                    //          .endofpacket
	);

	DE1_SoC_QSYS_mm_interconnect_2_id_router id_router_001 (
		.sink_ready         (agent_pipeline_003_source0_ready),                            //      sink.ready
		.sink_valid         (agent_pipeline_003_source0_valid),                            //          .valid
		.sink_data          (agent_pipeline_003_source0_data),                             //          .data
		.sink_startofpacket (agent_pipeline_003_source0_startofpacket),                    //          .startofpacket
		.sink_endofpacket   (agent_pipeline_003_source0_endofpacket),                      //          .endofpacket
		.clk                (pll_sys_outclk2_clk),                                         //       clk.clk
		.reset              (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (id_router_001_src_ready),                                     //       src.ready
		.src_valid          (id_router_001_src_valid),                                     //          .valid
		.src_data           (id_router_001_src_data),                                      //          .data
		.src_channel        (id_router_001_src_channel),                                   //          .channel
		.src_startofpacket  (id_router_001_src_startofpacket),                             //          .startofpacket
		.src_endofpacket    (id_router_001_src_endofpacket)                                //          .endofpacket
	);

	DE1_SoC_QSYS_mm_interconnect_2_id_router id_router_002 (
		.sink_ready         (agent_pipeline_005_source0_ready),                            //      sink.ready
		.sink_valid         (agent_pipeline_005_source0_valid),                            //          .valid
		.sink_data          (agent_pipeline_005_source0_data),                             //          .data
		.sink_startofpacket (agent_pipeline_005_source0_startofpacket),                    //          .startofpacket
		.sink_endofpacket   (agent_pipeline_005_source0_endofpacket),                      //          .endofpacket
		.clk                (pll_sys_outclk2_clk),                                         //       clk.clk
		.reset              (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (id_router_002_src_ready),                                     //       src.ready
		.src_valid          (id_router_002_src_valid),                                     //          .valid
		.src_data           (id_router_002_src_data),                                      //          .data
		.src_channel        (id_router_002_src_channel),                                   //          .channel
		.src_startofpacket  (id_router_002_src_startofpacket),                             //          .startofpacket
		.src_endofpacket    (id_router_002_src_endofpacket)                                //          .endofpacket
	);

	DE1_SoC_QSYS_mm_interconnect_2_id_router id_router_003 (
		.sink_ready         (agent_pipeline_007_source0_ready),                            //      sink.ready
		.sink_valid         (agent_pipeline_007_source0_valid),                            //          .valid
		.sink_data          (agent_pipeline_007_source0_data),                             //          .data
		.sink_startofpacket (agent_pipeline_007_source0_startofpacket),                    //          .startofpacket
		.sink_endofpacket   (agent_pipeline_007_source0_endofpacket),                      //          .endofpacket
		.clk                (pll_sys_outclk2_clk),                                         //       clk.clk
		.reset              (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (id_router_003_src_ready),                                     //       src.ready
		.src_valid          (id_router_003_src_valid),                                     //          .valid
		.src_data           (id_router_003_src_data),                                      //          .data
		.src_channel        (id_router_003_src_channel),                                   //          .channel
		.src_startofpacket  (id_router_003_src_startofpacket),                             //          .startofpacket
		.src_endofpacket    (id_router_003_src_endofpacket)                                //          .endofpacket
	);

	DE1_SoC_QSYS_mm_interconnect_2_id_router id_router_004 (
		.sink_ready         (agent_pipeline_009_source0_ready),                            //      sink.ready
		.sink_valid         (agent_pipeline_009_source0_valid),                            //          .valid
		.sink_data          (agent_pipeline_009_source0_data),                             //          .data
		.sink_startofpacket (agent_pipeline_009_source0_startofpacket),                    //          .startofpacket
		.sink_endofpacket   (agent_pipeline_009_source0_endofpacket),                      //          .endofpacket
		.clk                (pll_sys_outclk2_clk),                                         //       clk.clk
		.reset              (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (id_router_004_src_ready),                                     //       src.ready
		.src_valid          (id_router_004_src_valid),                                     //          .valid
		.src_data           (id_router_004_src_data),                                      //          .data
		.src_channel        (id_router_004_src_channel),                                   //          .channel
		.src_startofpacket  (id_router_004_src_startofpacket),                             //          .startofpacket
		.src_endofpacket    (id_router_004_src_endofpacket)                                //          .endofpacket
	);

	DE1_SoC_QSYS_mm_interconnect_2_id_router id_router_005 (
		.sink_ready         (agent_pipeline_011_source0_ready),                            //      sink.ready
		.sink_valid         (agent_pipeline_011_source0_valid),                            //          .valid
		.sink_data          (agent_pipeline_011_source0_data),                             //          .data
		.sink_startofpacket (agent_pipeline_011_source0_startofpacket),                    //          .startofpacket
		.sink_endofpacket   (agent_pipeline_011_source0_endofpacket),                      //          .endofpacket
		.clk                (pll_sys_outclk2_clk),                                         //       clk.clk
		.reset              (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (id_router_005_src_ready),                                     //       src.ready
		.src_valid          (id_router_005_src_valid),                                     //          .valid
		.src_data           (id_router_005_src_data),                                      //          .data
		.src_channel        (id_router_005_src_channel),                                   //          .channel
		.src_startofpacket  (id_router_005_src_startofpacket),                             //          .startofpacket
		.src_endofpacket    (id_router_005_src_endofpacket)                                //          .endofpacket
	);

	altera_merlin_traffic_limiter #(
		.PKT_DEST_ID_H             (69),
		.PKT_DEST_ID_L             (67),
		.PKT_SRC_ID_H              (66),
		.PKT_SRC_ID_L              (64),
		.PKT_TRANS_POSTED          (46),
		.PKT_TRANS_WRITE           (47),
		.MAX_OUTSTANDING_RESPONSES (9),
		.PIPELINED                 (0),
		.ST_DATA_W                 (83),
		.ST_CHANNEL_W              (6),
		.VALID_WIDTH               (1),
		.ENFORCE_ORDER             (1),
		.PREVENT_HAZARDS           (0),
		.PKT_BYTE_CNT_H            (53),
		.PKT_BYTE_CNT_L            (51),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.REORDER                   (0)
	) limiter (
		.clk                    (pll_sys_outclk2_clk),                                         //       clk.clk
		.reset                  (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.cmd_sink_ready         (addr_router_src_ready),                                       //  cmd_sink.ready
		.cmd_sink_valid         (addr_router_src_valid),                                       //          .valid
		.cmd_sink_data          (addr_router_src_data),                                        //          .data
		.cmd_sink_channel       (addr_router_src_channel),                                     //          .channel
		.cmd_sink_startofpacket (addr_router_src_startofpacket),                               //          .startofpacket
		.cmd_sink_endofpacket   (addr_router_src_endofpacket),                                 //          .endofpacket
		.cmd_src_ready          (limiter_cmd_src_ready),                                       //   cmd_src.ready
		.cmd_src_data           (limiter_cmd_src_data),                                        //          .data
		.cmd_src_channel        (limiter_cmd_src_channel),                                     //          .channel
		.cmd_src_startofpacket  (limiter_cmd_src_startofpacket),                               //          .startofpacket
		.cmd_src_endofpacket    (limiter_cmd_src_endofpacket),                                 //          .endofpacket
		.cmd_src_valid          (limiter_cmd_src_valid),                                       //          .valid
		.rsp_sink_ready         (limiter_pipeline_001_source0_ready),                          //  rsp_sink.ready
		.rsp_sink_valid         (limiter_pipeline_001_source0_valid),                          //          .valid
		.rsp_sink_channel       (limiter_pipeline_001_source0_channel),                        //          .channel
		.rsp_sink_data          (limiter_pipeline_001_source0_data),                           //          .data
		.rsp_sink_startofpacket (limiter_pipeline_001_source0_startofpacket),                  //          .startofpacket
		.rsp_sink_endofpacket   (limiter_pipeline_001_source0_endofpacket),                    //          .endofpacket
		.rsp_src_ready          (limiter_rsp_src_ready),                                       //   rsp_src.ready
		.rsp_src_valid          (limiter_rsp_src_valid),                                       //          .valid
		.rsp_src_data           (limiter_rsp_src_data),                                        //          .data
		.rsp_src_channel        (limiter_rsp_src_channel),                                     //          .channel
		.rsp_src_startofpacket  (limiter_rsp_src_startofpacket),                               //          .startofpacket
		.rsp_src_endofpacket    (limiter_rsp_src_endofpacket)                                  //          .endofpacket
	);

	DE1_SoC_QSYS_mm_interconnect_2_cmd_xbar_demux cmd_xbar_demux (
		.clk                (pll_sys_outclk2_clk),                                         //       clk.clk
		.reset              (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (limiter_pipeline_source0_ready),                              //      sink.ready
		.sink_channel       (limiter_pipeline_source0_channel),                            //          .channel
		.sink_data          (limiter_pipeline_source0_data),                               //          .data
		.sink_startofpacket (limiter_pipeline_source0_startofpacket),                      //          .startofpacket
		.sink_endofpacket   (limiter_pipeline_source0_endofpacket),                        //          .endofpacket
		.sink_valid         (limiter_pipeline_source0_valid),                              //          .valid
		.src0_ready         (cmd_xbar_demux_src0_ready),                                   //      src0.ready
		.src0_valid         (cmd_xbar_demux_src0_valid),                                   //          .valid
		.src0_data          (cmd_xbar_demux_src0_data),                                    //          .data
		.src0_channel       (cmd_xbar_demux_src0_channel),                                 //          .channel
		.src0_startofpacket (cmd_xbar_demux_src0_startofpacket),                           //          .startofpacket
		.src0_endofpacket   (cmd_xbar_demux_src0_endofpacket),                             //          .endofpacket
		.src1_ready         (cmd_xbar_demux_src1_ready),                                   //      src1.ready
		.src1_valid         (cmd_xbar_demux_src1_valid),                                   //          .valid
		.src1_data          (cmd_xbar_demux_src1_data),                                    //          .data
		.src1_channel       (cmd_xbar_demux_src1_channel),                                 //          .channel
		.src1_startofpacket (cmd_xbar_demux_src1_startofpacket),                           //          .startofpacket
		.src1_endofpacket   (cmd_xbar_demux_src1_endofpacket),                             //          .endofpacket
		.src2_ready         (cmd_xbar_demux_src2_ready),                                   //      src2.ready
		.src2_valid         (cmd_xbar_demux_src2_valid),                                   //          .valid
		.src2_data          (cmd_xbar_demux_src2_data),                                    //          .data
		.src2_channel       (cmd_xbar_demux_src2_channel),                                 //          .channel
		.src2_startofpacket (cmd_xbar_demux_src2_startofpacket),                           //          .startofpacket
		.src2_endofpacket   (cmd_xbar_demux_src2_endofpacket),                             //          .endofpacket
		.src3_ready         (cmd_xbar_demux_src3_ready),                                   //      src3.ready
		.src3_valid         (cmd_xbar_demux_src3_valid),                                   //          .valid
		.src3_data          (cmd_xbar_demux_src3_data),                                    //          .data
		.src3_channel       (cmd_xbar_demux_src3_channel),                                 //          .channel
		.src3_startofpacket (cmd_xbar_demux_src3_startofpacket),                           //          .startofpacket
		.src3_endofpacket   (cmd_xbar_demux_src3_endofpacket),                             //          .endofpacket
		.src4_ready         (cmd_xbar_demux_src4_ready),                                   //      src4.ready
		.src4_valid         (cmd_xbar_demux_src4_valid),                                   //          .valid
		.src4_data          (cmd_xbar_demux_src4_data),                                    //          .data
		.src4_channel       (cmd_xbar_demux_src4_channel),                                 //          .channel
		.src4_startofpacket (cmd_xbar_demux_src4_startofpacket),                           //          .startofpacket
		.src4_endofpacket   (cmd_xbar_demux_src4_endofpacket),                             //          .endofpacket
		.src5_ready         (cmd_xbar_demux_src5_ready),                                   //      src5.ready
		.src5_valid         (cmd_xbar_demux_src5_valid),                                   //          .valid
		.src5_data          (cmd_xbar_demux_src5_data),                                    //          .data
		.src5_channel       (cmd_xbar_demux_src5_channel),                                 //          .channel
		.src5_startofpacket (cmd_xbar_demux_src5_startofpacket),                           //          .startofpacket
		.src5_endofpacket   (cmd_xbar_demux_src5_endofpacket)                              //          .endofpacket
	);

	DE1_SoC_QSYS_mm_interconnect_2_cmd_xbar_mux cmd_xbar_mux (
		.clk                 (pll_sys_outclk2_clk),                                         //       clk.clk
		.reset               (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_src_ready),                                      //       src.ready
		.src_valid           (cmd_xbar_mux_src_valid),                                      //          .valid
		.src_data            (cmd_xbar_mux_src_data),                                       //          .data
		.src_channel         (cmd_xbar_mux_src_channel),                                    //          .channel
		.src_startofpacket   (cmd_xbar_mux_src_startofpacket),                              //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_src_endofpacket),                                //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src0_ready),                                   //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src0_valid),                                   //          .valid
		.sink0_channel       (cmd_xbar_demux_src0_channel),                                 //          .channel
		.sink0_data          (cmd_xbar_demux_src0_data),                                    //          .data
		.sink0_startofpacket (cmd_xbar_demux_src0_startofpacket),                           //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src0_endofpacket)                              //          .endofpacket
	);

	DE1_SoC_QSYS_mm_interconnect_2_cmd_xbar_mux cmd_xbar_mux_001 (
		.clk                 (pll_sys_outclk2_clk),                                         //       clk.clk
		.reset               (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_001_src_ready),                                  //       src.ready
		.src_valid           (cmd_xbar_mux_001_src_valid),                                  //          .valid
		.src_data            (cmd_xbar_mux_001_src_data),                                   //          .data
		.src_channel         (cmd_xbar_mux_001_src_channel),                                //          .channel
		.src_startofpacket   (cmd_xbar_mux_001_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_001_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src1_ready),                                   //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src1_valid),                                   //          .valid
		.sink0_channel       (cmd_xbar_demux_src1_channel),                                 //          .channel
		.sink0_data          (cmd_xbar_demux_src1_data),                                    //          .data
		.sink0_startofpacket (cmd_xbar_demux_src1_startofpacket),                           //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src1_endofpacket)                              //          .endofpacket
	);

	DE1_SoC_QSYS_mm_interconnect_2_cmd_xbar_mux cmd_xbar_mux_002 (
		.clk                 (pll_sys_outclk2_clk),                                         //       clk.clk
		.reset               (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_002_src_ready),                                  //       src.ready
		.src_valid           (cmd_xbar_mux_002_src_valid),                                  //          .valid
		.src_data            (cmd_xbar_mux_002_src_data),                                   //          .data
		.src_channel         (cmd_xbar_mux_002_src_channel),                                //          .channel
		.src_startofpacket   (cmd_xbar_mux_002_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_002_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src2_ready),                                   //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src2_valid),                                   //          .valid
		.sink0_channel       (cmd_xbar_demux_src2_channel),                                 //          .channel
		.sink0_data          (cmd_xbar_demux_src2_data),                                    //          .data
		.sink0_startofpacket (cmd_xbar_demux_src2_startofpacket),                           //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src2_endofpacket)                              //          .endofpacket
	);

	DE1_SoC_QSYS_mm_interconnect_2_cmd_xbar_mux cmd_xbar_mux_003 (
		.clk                 (pll_sys_outclk2_clk),                                         //       clk.clk
		.reset               (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_003_src_ready),                                  //       src.ready
		.src_valid           (cmd_xbar_mux_003_src_valid),                                  //          .valid
		.src_data            (cmd_xbar_mux_003_src_data),                                   //          .data
		.src_channel         (cmd_xbar_mux_003_src_channel),                                //          .channel
		.src_startofpacket   (cmd_xbar_mux_003_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_003_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src3_ready),                                   //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src3_valid),                                   //          .valid
		.sink0_channel       (cmd_xbar_demux_src3_channel),                                 //          .channel
		.sink0_data          (cmd_xbar_demux_src3_data),                                    //          .data
		.sink0_startofpacket (cmd_xbar_demux_src3_startofpacket),                           //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src3_endofpacket)                              //          .endofpacket
	);

	DE1_SoC_QSYS_mm_interconnect_2_cmd_xbar_mux cmd_xbar_mux_004 (
		.clk                 (pll_sys_outclk2_clk),                                         //       clk.clk
		.reset               (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_004_src_ready),                                  //       src.ready
		.src_valid           (cmd_xbar_mux_004_src_valid),                                  //          .valid
		.src_data            (cmd_xbar_mux_004_src_data),                                   //          .data
		.src_channel         (cmd_xbar_mux_004_src_channel),                                //          .channel
		.src_startofpacket   (cmd_xbar_mux_004_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_004_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src4_ready),                                   //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src4_valid),                                   //          .valid
		.sink0_channel       (cmd_xbar_demux_src4_channel),                                 //          .channel
		.sink0_data          (cmd_xbar_demux_src4_data),                                    //          .data
		.sink0_startofpacket (cmd_xbar_demux_src4_startofpacket),                           //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src4_endofpacket)                              //          .endofpacket
	);

	DE1_SoC_QSYS_mm_interconnect_2_cmd_xbar_mux cmd_xbar_mux_005 (
		.clk                 (pll_sys_outclk2_clk),                                         //       clk.clk
		.reset               (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_005_src_ready),                                  //       src.ready
		.src_valid           (cmd_xbar_mux_005_src_valid),                                  //          .valid
		.src_data            (cmd_xbar_mux_005_src_data),                                   //          .data
		.src_channel         (cmd_xbar_mux_005_src_channel),                                //          .channel
		.src_startofpacket   (cmd_xbar_mux_005_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_005_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src5_ready),                                   //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src5_valid),                                   //          .valid
		.sink0_channel       (cmd_xbar_demux_src5_channel),                                 //          .channel
		.sink0_data          (cmd_xbar_demux_src5_data),                                    //          .data
		.sink0_startofpacket (cmd_xbar_demux_src5_startofpacket),                           //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src5_endofpacket)                              //          .endofpacket
	);

	DE1_SoC_QSYS_mm_interconnect_2_rsp_xbar_demux rsp_xbar_demux (
		.clk                (pll_sys_outclk2_clk),                                         //       clk.clk
		.reset              (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_src_ready),                                         //      sink.ready
		.sink_channel       (id_router_src_channel),                                       //          .channel
		.sink_data          (id_router_src_data),                                          //          .data
		.sink_startofpacket (id_router_src_startofpacket),                                 //          .startofpacket
		.sink_endofpacket   (id_router_src_endofpacket),                                   //          .endofpacket
		.sink_valid         (id_router_src_valid),                                         //          .valid
		.src0_ready         (rsp_xbar_demux_src0_ready),                                   //      src0.ready
		.src0_valid         (rsp_xbar_demux_src0_valid),                                   //          .valid
		.src0_data          (rsp_xbar_demux_src0_data),                                    //          .data
		.src0_channel       (rsp_xbar_demux_src0_channel),                                 //          .channel
		.src0_startofpacket (rsp_xbar_demux_src0_startofpacket),                           //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_src0_endofpacket)                              //          .endofpacket
	);

	DE1_SoC_QSYS_mm_interconnect_2_rsp_xbar_demux rsp_xbar_demux_001 (
		.clk                (pll_sys_outclk2_clk),                                         //       clk.clk
		.reset              (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_001_src_ready),                                     //      sink.ready
		.sink_channel       (id_router_001_src_channel),                                   //          .channel
		.sink_data          (id_router_001_src_data),                                      //          .data
		.sink_startofpacket (id_router_001_src_startofpacket),                             //          .startofpacket
		.sink_endofpacket   (id_router_001_src_endofpacket),                               //          .endofpacket
		.sink_valid         (id_router_001_src_valid),                                     //          .valid
		.src0_ready         (rsp_xbar_demux_001_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_xbar_demux_001_src0_valid),                               //          .valid
		.src0_data          (rsp_xbar_demux_001_src0_data),                                //          .data
		.src0_channel       (rsp_xbar_demux_001_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_xbar_demux_001_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_001_src0_endofpacket)                          //          .endofpacket
	);

	DE1_SoC_QSYS_mm_interconnect_2_rsp_xbar_demux rsp_xbar_demux_002 (
		.clk                (pll_sys_outclk2_clk),                                         //       clk.clk
		.reset              (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_002_src_ready),                                     //      sink.ready
		.sink_channel       (id_router_002_src_channel),                                   //          .channel
		.sink_data          (id_router_002_src_data),                                      //          .data
		.sink_startofpacket (id_router_002_src_startofpacket),                             //          .startofpacket
		.sink_endofpacket   (id_router_002_src_endofpacket),                               //          .endofpacket
		.sink_valid         (id_router_002_src_valid),                                     //          .valid
		.src0_ready         (rsp_xbar_demux_002_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_xbar_demux_002_src0_valid),                               //          .valid
		.src0_data          (rsp_xbar_demux_002_src0_data),                                //          .data
		.src0_channel       (rsp_xbar_demux_002_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_xbar_demux_002_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_002_src0_endofpacket)                          //          .endofpacket
	);

	DE1_SoC_QSYS_mm_interconnect_2_rsp_xbar_demux rsp_xbar_demux_003 (
		.clk                (pll_sys_outclk2_clk),                                         //       clk.clk
		.reset              (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_003_src_ready),                                     //      sink.ready
		.sink_channel       (id_router_003_src_channel),                                   //          .channel
		.sink_data          (id_router_003_src_data),                                      //          .data
		.sink_startofpacket (id_router_003_src_startofpacket),                             //          .startofpacket
		.sink_endofpacket   (id_router_003_src_endofpacket),                               //          .endofpacket
		.sink_valid         (id_router_003_src_valid),                                     //          .valid
		.src0_ready         (rsp_xbar_demux_003_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_xbar_demux_003_src0_valid),                               //          .valid
		.src0_data          (rsp_xbar_demux_003_src0_data),                                //          .data
		.src0_channel       (rsp_xbar_demux_003_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_xbar_demux_003_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_003_src0_endofpacket)                          //          .endofpacket
	);

	DE1_SoC_QSYS_mm_interconnect_2_rsp_xbar_demux rsp_xbar_demux_004 (
		.clk                (pll_sys_outclk2_clk),                                         //       clk.clk
		.reset              (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_004_src_ready),                                     //      sink.ready
		.sink_channel       (id_router_004_src_channel),                                   //          .channel
		.sink_data          (id_router_004_src_data),                                      //          .data
		.sink_startofpacket (id_router_004_src_startofpacket),                             //          .startofpacket
		.sink_endofpacket   (id_router_004_src_endofpacket),                               //          .endofpacket
		.sink_valid         (id_router_004_src_valid),                                     //          .valid
		.src0_ready         (rsp_xbar_demux_004_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_xbar_demux_004_src0_valid),                               //          .valid
		.src0_data          (rsp_xbar_demux_004_src0_data),                                //          .data
		.src0_channel       (rsp_xbar_demux_004_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_xbar_demux_004_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_004_src0_endofpacket)                          //          .endofpacket
	);

	DE1_SoC_QSYS_mm_interconnect_2_rsp_xbar_demux rsp_xbar_demux_005 (
		.clk                (pll_sys_outclk2_clk),                                         //       clk.clk
		.reset              (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_005_src_ready),                                     //      sink.ready
		.sink_channel       (id_router_005_src_channel),                                   //          .channel
		.sink_data          (id_router_005_src_data),                                      //          .data
		.sink_startofpacket (id_router_005_src_startofpacket),                             //          .startofpacket
		.sink_endofpacket   (id_router_005_src_endofpacket),                               //          .endofpacket
		.sink_valid         (id_router_005_src_valid),                                     //          .valid
		.src0_ready         (rsp_xbar_demux_005_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_xbar_demux_005_src0_valid),                               //          .valid
		.src0_data          (rsp_xbar_demux_005_src0_data),                                //          .data
		.src0_channel       (rsp_xbar_demux_005_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_xbar_demux_005_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_005_src0_endofpacket)                          //          .endofpacket
	);

	DE1_SoC_QSYS_mm_interconnect_2_rsp_xbar_mux rsp_xbar_mux (
		.clk                 (pll_sys_outclk2_clk),                                         //       clk.clk
		.reset               (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_xbar_mux_src_ready),                                      //       src.ready
		.src_valid           (rsp_xbar_mux_src_valid),                                      //          .valid
		.src_data            (rsp_xbar_mux_src_data),                                       //          .data
		.src_channel         (rsp_xbar_mux_src_channel),                                    //          .channel
		.src_startofpacket   (rsp_xbar_mux_src_startofpacket),                              //          .startofpacket
		.src_endofpacket     (rsp_xbar_mux_src_endofpacket),                                //          .endofpacket
		.sink0_ready         (rsp_xbar_demux_src0_ready),                                   //     sink0.ready
		.sink0_valid         (rsp_xbar_demux_src0_valid),                                   //          .valid
		.sink0_channel       (rsp_xbar_demux_src0_channel),                                 //          .channel
		.sink0_data          (rsp_xbar_demux_src0_data),                                    //          .data
		.sink0_startofpacket (rsp_xbar_demux_src0_startofpacket),                           //          .startofpacket
		.sink0_endofpacket   (rsp_xbar_demux_src0_endofpacket),                             //          .endofpacket
		.sink1_ready         (rsp_xbar_demux_001_src0_ready),                               //     sink1.ready
		.sink1_valid         (rsp_xbar_demux_001_src0_valid),                               //          .valid
		.sink1_channel       (rsp_xbar_demux_001_src0_channel),                             //          .channel
		.sink1_data          (rsp_xbar_demux_001_src0_data),                                //          .data
		.sink1_startofpacket (rsp_xbar_demux_001_src0_startofpacket),                       //          .startofpacket
		.sink1_endofpacket   (rsp_xbar_demux_001_src0_endofpacket),                         //          .endofpacket
		.sink2_ready         (rsp_xbar_demux_002_src0_ready),                               //     sink2.ready
		.sink2_valid         (rsp_xbar_demux_002_src0_valid),                               //          .valid
		.sink2_channel       (rsp_xbar_demux_002_src0_channel),                             //          .channel
		.sink2_data          (rsp_xbar_demux_002_src0_data),                                //          .data
		.sink2_startofpacket (rsp_xbar_demux_002_src0_startofpacket),                       //          .startofpacket
		.sink2_endofpacket   (rsp_xbar_demux_002_src0_endofpacket),                         //          .endofpacket
		.sink3_ready         (rsp_xbar_demux_003_src0_ready),                               //     sink3.ready
		.sink3_valid         (rsp_xbar_demux_003_src0_valid),                               //          .valid
		.sink3_channel       (rsp_xbar_demux_003_src0_channel),                             //          .channel
		.sink3_data          (rsp_xbar_demux_003_src0_data),                                //          .data
		.sink3_startofpacket (rsp_xbar_demux_003_src0_startofpacket),                       //          .startofpacket
		.sink3_endofpacket   (rsp_xbar_demux_003_src0_endofpacket),                         //          .endofpacket
		.sink4_ready         (rsp_xbar_demux_004_src0_ready),                               //     sink4.ready
		.sink4_valid         (rsp_xbar_demux_004_src0_valid),                               //          .valid
		.sink4_channel       (rsp_xbar_demux_004_src0_channel),                             //          .channel
		.sink4_data          (rsp_xbar_demux_004_src0_data),                                //          .data
		.sink4_startofpacket (rsp_xbar_demux_004_src0_startofpacket),                       //          .startofpacket
		.sink4_endofpacket   (rsp_xbar_demux_004_src0_endofpacket),                         //          .endofpacket
		.sink5_ready         (rsp_xbar_demux_005_src0_ready),                               //     sink5.ready
		.sink5_valid         (rsp_xbar_demux_005_src0_valid),                               //          .valid
		.sink5_channel       (rsp_xbar_demux_005_src0_channel),                             //          .channel
		.sink5_data          (rsp_xbar_demux_005_src0_data),                                //          .data
		.sink5_startofpacket (rsp_xbar_demux_005_src0_startofpacket),                       //          .startofpacket
		.sink5_endofpacket   (rsp_xbar_demux_005_src0_endofpacket)                          //          .endofpacket
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (83),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (6),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) limiter_pipeline (
		.clk               (pll_sys_outclk2_clk),                                         //       cr0.clk
		.reset             (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (limiter_cmd_src_ready),                                       //     sink0.ready
		.in_valid          (limiter_cmd_src_valid),                                       //          .valid
		.in_startofpacket  (limiter_cmd_src_startofpacket),                               //          .startofpacket
		.in_endofpacket    (limiter_cmd_src_endofpacket),                                 //          .endofpacket
		.in_data           (limiter_cmd_src_data),                                        //          .data
		.in_channel        (limiter_cmd_src_channel),                                     //          .channel
		.out_ready         (limiter_pipeline_source0_ready),                              //   source0.ready
		.out_valid         (limiter_pipeline_source0_valid),                              //          .valid
		.out_startofpacket (limiter_pipeline_source0_startofpacket),                      //          .startofpacket
		.out_endofpacket   (limiter_pipeline_source0_endofpacket),                        //          .endofpacket
		.out_data          (limiter_pipeline_source0_data),                               //          .data
		.out_channel       (limiter_pipeline_source0_channel),                            //          .channel
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (83),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (6),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) limiter_pipeline_001 (
		.clk               (pll_sys_outclk2_clk),                                         //       cr0.clk
		.reset             (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_xbar_mux_src_ready),                                      //     sink0.ready
		.in_valid          (rsp_xbar_mux_src_valid),                                      //          .valid
		.in_startofpacket  (rsp_xbar_mux_src_startofpacket),                              //          .startofpacket
		.in_endofpacket    (rsp_xbar_mux_src_endofpacket),                                //          .endofpacket
		.in_data           (rsp_xbar_mux_src_data),                                       //          .data
		.in_channel        (rsp_xbar_mux_src_channel),                                    //          .channel
		.out_ready         (limiter_pipeline_001_source0_ready),                          //   source0.ready
		.out_valid         (limiter_pipeline_001_source0_valid),                          //          .valid
		.out_startofpacket (limiter_pipeline_001_source0_startofpacket),                  //          .startofpacket
		.out_endofpacket   (limiter_pipeline_001_source0_endofpacket),                    //          .endofpacket
		.out_data          (limiter_pipeline_001_source0_data),                           //          .data
		.out_channel       (limiter_pipeline_001_source0_channel),                        //          .channel
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (83),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (6),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline (
		.clk               (pll_sys_outclk2_clk),                                         //       cr0.clk
		.reset             (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_xbar_mux_src_ready),                                      //     sink0.ready
		.in_valid          (cmd_xbar_mux_src_valid),                                      //          .valid
		.in_startofpacket  (cmd_xbar_mux_src_startofpacket),                              //          .startofpacket
		.in_endofpacket    (cmd_xbar_mux_src_endofpacket),                                //          .endofpacket
		.in_data           (cmd_xbar_mux_src_data),                                       //          .data
		.in_channel        (cmd_xbar_mux_src_channel),                                    //          .channel
		.out_ready         (agent_pipeline_source0_ready),                                //   source0.ready
		.out_valid         (agent_pipeline_source0_valid),                                //          .valid
		.out_startofpacket (agent_pipeline_source0_startofpacket),                        //          .startofpacket
		.out_endofpacket   (agent_pipeline_source0_endofpacket),                          //          .endofpacket
		.out_data          (agent_pipeline_source0_data),                                 //          .data
		.out_channel       (agent_pipeline_source0_channel),                              //          .channel
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (83),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_001 (
		.clk               (pll_sys_outclk2_clk),                                                 //       cr0.clk
		.reset             (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),         // cr0_reset.reset
		.in_ready          (timer_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //     sink0.ready
		.in_valid          (timer_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.in_startofpacket  (timer_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.in_endofpacket    (timer_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.in_data           (timer_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.out_ready         (agent_pipeline_001_source0_ready),                                    //   source0.ready
		.out_valid         (agent_pipeline_001_source0_valid),                                    //          .valid
		.out_startofpacket (agent_pipeline_001_source0_startofpacket),                            //          .startofpacket
		.out_endofpacket   (agent_pipeline_001_source0_endofpacket),                              //          .endofpacket
		.out_data          (agent_pipeline_001_source0_data),                                     //          .data
		.in_empty          (1'b0),                                                                // (terminated)
		.out_empty         (),                                                                    // (terminated)
		.out_error         (),                                                                    // (terminated)
		.in_error          (1'b0),                                                                // (terminated)
		.out_channel       (),                                                                    // (terminated)
		.in_channel        (1'b0)                                                                 // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (83),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (6),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_002 (
		.clk               (pll_sys_outclk2_clk),                                         //       cr0.clk
		.reset             (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_xbar_mux_001_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_xbar_mux_001_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_xbar_mux_001_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_xbar_mux_001_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_xbar_mux_001_src_data),                                   //          .data
		.in_channel        (cmd_xbar_mux_001_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_002_source0_ready),                            //   source0.ready
		.out_valid         (agent_pipeline_002_source0_valid),                            //          .valid
		.out_startofpacket (agent_pipeline_002_source0_startofpacket),                    //          .startofpacket
		.out_endofpacket   (agent_pipeline_002_source0_endofpacket),                      //          .endofpacket
		.out_data          (agent_pipeline_002_source0_data),                             //          .data
		.out_channel       (agent_pipeline_002_source0_channel),                          //          .channel
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (83),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_003 (
		.clk               (pll_sys_outclk2_clk),                                                            //       cr0.clk
		.reset             (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),                    // cr0_reset.reset
		.in_ready          (sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_ready),         //     sink0.ready
		.in_valid          (sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.in_startofpacket  (sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.in_endofpacket    (sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.in_data           (sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.out_ready         (agent_pipeline_003_source0_ready),                                               //   source0.ready
		.out_valid         (agent_pipeline_003_source0_valid),                                               //          .valid
		.out_startofpacket (agent_pipeline_003_source0_startofpacket),                                       //          .startofpacket
		.out_endofpacket   (agent_pipeline_003_source0_endofpacket),                                         //          .endofpacket
		.out_data          (agent_pipeline_003_source0_data),                                                //          .data
		.in_empty          (1'b0),                                                                           // (terminated)
		.out_empty         (),                                                                               // (terminated)
		.out_error         (),                                                                               // (terminated)
		.in_error          (1'b0),                                                                           // (terminated)
		.out_channel       (),                                                                               // (terminated)
		.in_channel        (1'b0)                                                                            // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (83),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (6),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_004 (
		.clk               (pll_sys_outclk2_clk),                                         //       cr0.clk
		.reset             (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_xbar_mux_002_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_xbar_mux_002_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_xbar_mux_002_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_xbar_mux_002_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_xbar_mux_002_src_data),                                   //          .data
		.in_channel        (cmd_xbar_mux_002_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_004_source0_ready),                            //   source0.ready
		.out_valid         (agent_pipeline_004_source0_valid),                            //          .valid
		.out_startofpacket (agent_pipeline_004_source0_startofpacket),                    //          .startofpacket
		.out_endofpacket   (agent_pipeline_004_source0_endofpacket),                      //          .endofpacket
		.out_data          (agent_pipeline_004_source0_data),                             //          .data
		.out_channel       (agent_pipeline_004_source0_channel),                          //          .channel
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (83),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_005 (
		.clk               (pll_sys_outclk2_clk),                                                   //       cr0.clk
		.reset             (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),           // cr0_reset.reset
		.in_ready          (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //     sink0.ready
		.in_valid          (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.in_startofpacket  (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.in_endofpacket    (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.in_data           (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.out_ready         (agent_pipeline_005_source0_ready),                                      //   source0.ready
		.out_valid         (agent_pipeline_005_source0_valid),                                      //          .valid
		.out_startofpacket (agent_pipeline_005_source0_startofpacket),                              //          .startofpacket
		.out_endofpacket   (agent_pipeline_005_source0_endofpacket),                                //          .endofpacket
		.out_data          (agent_pipeline_005_source0_data),                                       //          .data
		.in_empty          (1'b0),                                                                  // (terminated)
		.out_empty         (),                                                                      // (terminated)
		.out_error         (),                                                                      // (terminated)
		.in_error          (1'b0),                                                                  // (terminated)
		.out_channel       (),                                                                      // (terminated)
		.in_channel        (1'b0)                                                                   // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (83),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (6),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_006 (
		.clk               (pll_sys_outclk2_clk),                                         //       cr0.clk
		.reset             (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_xbar_mux_003_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_xbar_mux_003_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_xbar_mux_003_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_xbar_mux_003_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_xbar_mux_003_src_data),                                   //          .data
		.in_channel        (cmd_xbar_mux_003_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_006_source0_ready),                            //   source0.ready
		.out_valid         (agent_pipeline_006_source0_valid),                            //          .valid
		.out_startofpacket (agent_pipeline_006_source0_startofpacket),                    //          .startofpacket
		.out_endofpacket   (agent_pipeline_006_source0_endofpacket),                      //          .endofpacket
		.out_data          (agent_pipeline_006_source0_data),                             //          .data
		.out_channel       (agent_pipeline_006_source0_channel),                          //          .channel
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (83),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_007 (
		.clk               (pll_sys_outclk2_clk),                                                   //       cr0.clk
		.reset             (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),           // cr0_reset.reset
		.in_ready          (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //     sink0.ready
		.in_valid          (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.in_startofpacket  (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.in_endofpacket    (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.in_data           (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.out_ready         (agent_pipeline_007_source0_ready),                                      //   source0.ready
		.out_valid         (agent_pipeline_007_source0_valid),                                      //          .valid
		.out_startofpacket (agent_pipeline_007_source0_startofpacket),                              //          .startofpacket
		.out_endofpacket   (agent_pipeline_007_source0_endofpacket),                                //          .endofpacket
		.out_data          (agent_pipeline_007_source0_data),                                       //          .data
		.in_empty          (1'b0),                                                                  // (terminated)
		.out_empty         (),                                                                      // (terminated)
		.out_error         (),                                                                      // (terminated)
		.in_error          (1'b0),                                                                  // (terminated)
		.out_channel       (),                                                                      // (terminated)
		.in_channel        (1'b0)                                                                   // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (83),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (6),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_008 (
		.clk               (pll_sys_outclk2_clk),                                         //       cr0.clk
		.reset             (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_xbar_mux_004_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_xbar_mux_004_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_xbar_mux_004_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_xbar_mux_004_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_xbar_mux_004_src_data),                                   //          .data
		.in_channel        (cmd_xbar_mux_004_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_008_source0_ready),                            //   source0.ready
		.out_valid         (agent_pipeline_008_source0_valid),                            //          .valid
		.out_startofpacket (agent_pipeline_008_source0_startofpacket),                    //          .startofpacket
		.out_endofpacket   (agent_pipeline_008_source0_endofpacket),                      //          .endofpacket
		.out_data          (agent_pipeline_008_source0_data),                             //          .data
		.out_channel       (agent_pipeline_008_source0_channel),                          //          .channel
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (83),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_009 (
		.clk               (pll_sys_outclk2_clk),                                                     //       cr0.clk
		.reset             (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),             // cr0_reset.reset
		.in_ready          (td_status_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //     sink0.ready
		.in_valid          (td_status_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.in_startofpacket  (td_status_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.in_endofpacket    (td_status_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.in_data           (td_status_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.out_ready         (agent_pipeline_009_source0_ready),                                        //   source0.ready
		.out_valid         (agent_pipeline_009_source0_valid),                                        //          .valid
		.out_startofpacket (agent_pipeline_009_source0_startofpacket),                                //          .startofpacket
		.out_endofpacket   (agent_pipeline_009_source0_endofpacket),                                  //          .endofpacket
		.out_data          (agent_pipeline_009_source0_data),                                         //          .data
		.in_empty          (1'b0),                                                                    // (terminated)
		.out_empty         (),                                                                        // (terminated)
		.out_error         (),                                                                        // (terminated)
		.in_error          (1'b0),                                                                    // (terminated)
		.out_channel       (),                                                                        // (terminated)
		.in_channel        (1'b0)                                                                     // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (83),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (6),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_010 (
		.clk               (pll_sys_outclk2_clk),                                         //       cr0.clk
		.reset             (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_xbar_mux_005_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_xbar_mux_005_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_xbar_mux_005_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_xbar_mux_005_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_xbar_mux_005_src_data),                                   //          .data
		.in_channel        (cmd_xbar_mux_005_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_010_source0_ready),                            //   source0.ready
		.out_valid         (agent_pipeline_010_source0_valid),                            //          .valid
		.out_startofpacket (agent_pipeline_010_source0_startofpacket),                    //          .startofpacket
		.out_endofpacket   (agent_pipeline_010_source0_endofpacket),                      //          .endofpacket
		.out_data          (agent_pipeline_010_source0_data),                             //          .data
		.out_channel       (agent_pipeline_010_source0_channel),                          //          .channel
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (83),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_011 (
		.clk               (pll_sys_outclk2_clk),                                                      //       cr0.clk
		.reset             (clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset),              // cr0_reset.reset
		.in_ready          (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //     sink0.ready
		.in_valid          (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.in_startofpacket  (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.in_endofpacket    (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.in_data           (td_reset_n_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.out_ready         (agent_pipeline_011_source0_ready),                                         //   source0.ready
		.out_valid         (agent_pipeline_011_source0_valid),                                         //          .valid
		.out_startofpacket (agent_pipeline_011_source0_startofpacket),                                 //          .startofpacket
		.out_endofpacket   (agent_pipeline_011_source0_endofpacket),                                   //          .endofpacket
		.out_data          (agent_pipeline_011_source0_data),                                          //          .data
		.in_empty          (1'b0),                                                                     // (terminated)
		.out_empty         (),                                                                         // (terminated)
		.out_error         (),                                                                         // (terminated)
		.in_error          (1'b0),                                                                     // (terminated)
		.out_channel       (),                                                                         // (terminated)
		.in_channel        (1'b0)                                                                      // (terminated)
	);

endmodule
